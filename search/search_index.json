{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FastAPI implemention of the STAC API spec. Documentation : https://stac-utils.github.io/stac-fastapi/ Source Code : stac-utils/stac-fastapi Python library for building a STAC compliant FastAPI application. The project is split up into several namespace packages: stac_fastapi.api : An API layer which enforces the stac-api-spec . stac_fastapi.extensions : Abstract base classes for STAC API extensions and third-party extensions. stac_fastapi.server : Standalone FastAPI server for the application. stac_fastapi.sqlalchemy : Postgres backend implementation with sqlalchemy. stac_fastapi.types : Shared types and abstract base classes used by the library. stac-fastapi was initially developed by arturo-ai . Installation \u00b6 pip install stac-fastapi # or from sources git clone https://github.com/stac-utils/stac-fastapi.git cd stac-fastapi pip install -e \\ stac_fastapi/api \\ stac_fastapi/types \\ stac_fastapi/extensions \\ stac_fastapi/sqlalchemy Local Development \u00b6 Use docker-compose to deploy the application, migrate the database, and ingest some example data: docker-compose build docker-compose up For local development it is often more convenient to run the application outside of docker-compose: make docker-run Testing \u00b6 The database container provided by the docker-compose stack must be running. Run all tests: make test Run individual tests by running pytest within the docker container: make docker-shell $ pytest -v","title":"Home"},{"location":"#installation","text":"pip install stac-fastapi # or from sources git clone https://github.com/stac-utils/stac-fastapi.git cd stac-fastapi pip install -e \\ stac_fastapi/api \\ stac_fastapi/types \\ stac_fastapi/extensions \\ stac_fastapi/sqlalchemy","title":"Installation"},{"location":"#local-development","text":"Use docker-compose to deploy the application, migrate the database, and ingest some example data: docker-compose build docker-compose up For local development it is often more convenient to run the application outside of docker-compose: make docker-run","title":"Local Development"},{"location":"#testing","text":"The database container provided by the docker-compose stack must be running. Run all tests: make test Run individual tests by running pytest within the docker container: make docker-shell $ pytest -v","title":"Testing"},{"location":"contributing/","text":"Contributing \u00b6 Issues and pull requests are more than welcome. dev install $ git clone https://github.com/stac-utils/stac-fastapi.git $ cd stac-fastapi $ pip install -e . [ dev ] Python3.8 only This repo is set to use pre-commit to run isort , flake8 , pydocstring , black (\"uncompromising Python code formatter\") and mypy when committing new code. $ pre-commit install Docs \u00b6 $ git clone https://github.com/stac-utils/stac-fastapi.git $ cd stac-fastapi $ pip install -e . [ \"docs\" ] Hot-reloading docs: $ mkdocs serve To manually deploy docs (note you should never need to do this because Github Actions deploys automatically for new commits.): Create API documentations $ pdocs as_markdown \\ --output_dir docs/api/ \\ --exclude_source \\ --overwrite \\ stac_fastapi # deploy $ mkdocs gh-deploy","title":"Development - Contributing"},{"location":"contributing/#contributing","text":"Issues and pull requests are more than welcome. dev install $ git clone https://github.com/stac-utils/stac-fastapi.git $ cd stac-fastapi $ pip install -e . [ dev ] Python3.8 only This repo is set to use pre-commit to run isort , flake8 , pydocstring , black (\"uncompromising Python code formatter\") and mypy when committing new code. $ pre-commit install","title":"Contributing"},{"location":"contributing/#docs","text":"$ git clone https://github.com/stac-utils/stac-fastapi.git $ cd stac-fastapi $ pip install -e . [ \"docs\" ] Hot-reloading docs: $ mkdocs serve To manually deploy docs (note you should never need to do this because Github Actions deploys automatically for new commits.): Create API documentations $ pdocs as_markdown \\ --output_dir docs/api/ \\ --exclude_source \\ --overwrite \\ stac_fastapi # deploy $ mkdocs gh-deploy","title":"Docs"},{"location":"release-notes/","text":"1.1.0 (2021-01-28) \u00b6 Improve how the library declares API extensions ( stac-utils/arturo-stac-api!54 ) Add postgres bulk transactions client ( stac-utils/arturo-stac-api!59 ) Update TiTiler version ( stac-utils/arturo-stac-api!61 ) Use attrs instead of dataclasses ( stac-utils/arturo-stac-api!73 ) Remove postgres database connection from API layer ( stac-utils/arturo-stac-api!74 ) Fix pre-commit config ( stac-utils/arturo-stac-api!75 ) 1.0.0 (2020-09-25) \u00b6 First PyPi release!","title":"Release Notes"},{"location":"release-notes/#110-2021-01-28","text":"Improve how the library declares API extensions ( stac-utils/arturo-stac-api!54 ) Add postgres bulk transactions client ( stac-utils/arturo-stac-api!59 ) Update TiTiler version ( stac-utils/arturo-stac-api!61 ) Use attrs instead of dataclasses ( stac-utils/arturo-stac-api!73 ) Remove postgres database connection from API layer ( stac-utils/arturo-stac-api!74 ) Fix pre-commit config ( stac-utils/arturo-stac-api!75 )","title":"1.1.0 (2021-01-28)"},{"location":"release-notes/#100-2020-09-25","text":"First PyPi release!","title":"1.0.0 (2020-09-25)"},{"location":"api/stac_fastapi/","text":"Namespace stac_fastapi \u00b6 None None Sub-modules \u00b6 stac_fastapi.api stac_fastapi.extensions stac_fastapi.sqlalchemy stac_fastapi.types","title":"Namespace stac_fastapi"},{"location":"api/stac_fastapi/#namespace-stac_fastapi","text":"None None","title":"Namespace stac_fastapi"},{"location":"api/stac_fastapi/#sub-modules","text":"stac_fastapi.api stac_fastapi.extensions stac_fastapi.sqlalchemy stac_fastapi.types","title":"Sub-modules"},{"location":"api/stac_fastapi/api/","text":"Module stac_fastapi.api \u00b6 api submodule. None Sub-modules \u00b6 stac_fastapi.api.app stac_fastapi.api.config stac_fastapi.api.errors stac_fastapi.api.middleware stac_fastapi.api.models stac_fastapi.api.openapi stac_fastapi.api.routes stac_fastapi.api.version","title":"Module stac_fastapi.api"},{"location":"api/stac_fastapi/api/#module-stac_fastapiapi","text":"api submodule. None","title":"Module stac_fastapi.api"},{"location":"api/stac_fastapi/api/#sub-modules","text":"stac_fastapi.api.app stac_fastapi.api.config stac_fastapi.api.errors stac_fastapi.api.middleware stac_fastapi.api.models stac_fastapi.api.openapi stac_fastapi.api.routes stac_fastapi.api.version","title":"Sub-modules"},{"location":"api/stac_fastapi/api/app/","text":"Module stac_fastapi.api.app \u00b6 fastapi app creation. None Variables \u00b6 DEFAULT_STATUS_CODES Classes \u00b6 StacApi \u00b6 class StacApi ( settings : stac_fastapi . types . config . ApiSettings , client : stac_fastapi . types . core . BaseCoreClient , extensions : List [ stac_fastapi . types . extension . ApiExtension ] = NOTHING , exceptions : Dict [ Type [ Exception ], int ] = NOTHING , app : fastapi . applications . FastAPI = NOTHING ) Attributes \u00b6 Name Type Description Default settings None API settings and configuration, potentially using environment variables. See pydantic-docs.helpmanual.io/usage/settings/ . None client None A subclass of stac_api.clients.BaseCoreClient . Defines the application logic which is injected into the API. None extensions None API extensions to include with the application. This may include official STAC extensions as well as third-party add ons. None exceptions None Defines a global mapping between exceptions and status codes, allowing configuration of response behavior on certain exceptions ( fastapi.tiangolo.com/tutorial/handling-errors/#install-custom-exception-handlers ). None app None The FastAPI application, defaults to a fresh application. None Methods \u00b6 add_health_check \u00b6 def add_health_check ( self ) Add a health check. customize_openapi \u00b6 def customize_openapi ( self ) -> Union [ Dict [ str , Any ], NoneType ] Customize openapi schema. get_extension \u00b6 def get_extension ( self , extension : Type [ stac_fastapi . types . extension . ApiExtension ] ) -> Union [ stac_fastapi . types . extension . ApiExtension , NoneType ] Get an extension. Parameters: Name Type Description Default extension None extension to check for. None Returns: Type Description None The extension instance, if it exists. register_core \u00b6 def register_core ( self ) Register core STAC endpoints. GET / GET /conformance GET /collections GET /collections/{collectionId} GET /collections/{collectionId}/items GET /collection/{collectionId}/items/{itemId} GET /search POST /search Injects application logic (StacApi.client) into the API layer. Returns: Type Description None None","title":"app"},{"location":"api/stac_fastapi/api/app/#module-stac_fastapiapiapp","text":"fastapi app creation. None","title":"Module stac_fastapi.api.app"},{"location":"api/stac_fastapi/api/app/#variables","text":"DEFAULT_STATUS_CODES","title":"Variables"},{"location":"api/stac_fastapi/api/app/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/api/app/#stacapi","text":"class StacApi ( settings : stac_fastapi . types . config . ApiSettings , client : stac_fastapi . types . core . BaseCoreClient , extensions : List [ stac_fastapi . types . extension . ApiExtension ] = NOTHING , exceptions : Dict [ Type [ Exception ], int ] = NOTHING , app : fastapi . applications . FastAPI = NOTHING )","title":"StacApi"},{"location":"api/stac_fastapi/api/app/#attributes","text":"Name Type Description Default settings None API settings and configuration, potentially using environment variables. See pydantic-docs.helpmanual.io/usage/settings/ . None client None A subclass of stac_api.clients.BaseCoreClient . Defines the application logic which is injected into the API. None extensions None API extensions to include with the application. This may include official STAC extensions as well as third-party add ons. None exceptions None Defines a global mapping between exceptions and status codes, allowing configuration of response behavior on certain exceptions ( fastapi.tiangolo.com/tutorial/handling-errors/#install-custom-exception-handlers ). None app None The FastAPI application, defaults to a fresh application. None","title":"Attributes"},{"location":"api/stac_fastapi/api/app/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/app/#add_health_check","text":"def add_health_check ( self ) Add a health check.","title":"add_health_check"},{"location":"api/stac_fastapi/api/app/#customize_openapi","text":"def customize_openapi ( self ) -> Union [ Dict [ str , Any ], NoneType ] Customize openapi schema.","title":"customize_openapi"},{"location":"api/stac_fastapi/api/app/#get_extension","text":"def get_extension ( self , extension : Type [ stac_fastapi . types . extension . ApiExtension ] ) -> Union [ stac_fastapi . types . extension . ApiExtension , NoneType ] Get an extension. Parameters: Name Type Description Default extension None extension to check for. None Returns: Type Description None The extension instance, if it exists.","title":"get_extension"},{"location":"api/stac_fastapi/api/app/#register_core","text":"def register_core ( self ) Register core STAC endpoints. GET / GET /conformance GET /collections GET /collections/{collectionId} GET /collections/{collectionId}/items GET /collection/{collectionId}/items/{itemId} GET /search POST /search Injects application logic (StacApi.client) into the API layer. Returns: Type Description None None","title":"register_core"},{"location":"api/stac_fastapi/api/config/","text":"Module stac_fastapi.api.config \u00b6 Application settings. None Classes \u00b6 AddOns \u00b6 class AddOns ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 enum.Enum Class variables \u00b6 bulk_transaction name tiles value ApiExtensions \u00b6 class ApiExtensions ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 enum.Enum Class variables \u00b6 context fields name query sort transaction value","title":"config"},{"location":"api/stac_fastapi/api/config/#module-stac_fastapiapiconfig","text":"Application settings. None","title":"Module stac_fastapi.api.config"},{"location":"api/stac_fastapi/api/config/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/api/config/#addons","text":"class AddOns ( / , * args , ** kwargs )","title":"AddOns"},{"location":"api/stac_fastapi/api/config/#ancestors-in-mro","text":"enum.Enum","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/config/#class-variables","text":"bulk_transaction name tiles value","title":"Class variables"},{"location":"api/stac_fastapi/api/config/#apiextensions","text":"class ApiExtensions ( / , * args , ** kwargs )","title":"ApiExtensions"},{"location":"api/stac_fastapi/api/config/#ancestors-in-mro_1","text":"enum.Enum","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/config/#class-variables_1","text":"context fields name query sort transaction value","title":"Class variables"},{"location":"api/stac_fastapi/api/errors/","text":"Module stac_fastapi.api.errors \u00b6 Error handling. None Variables \u00b6 DEFAULT_STATUS_CODES logger Functions \u00b6 add_exception_handlers \u00b6 def add_exception_handlers ( app : fastapi . applications . FastAPI , status_codes : Dict [ Type [ Exception ], int ] ) -> None Add exception handlers to the FastAPI application. Parameters: Name Type Description Default app None the FastAPI application. None status_codes None mapping between exceptions and status codes. None Returns: Type Description None None exception_handler_factory \u00b6 def exception_handler_factory ( status_code : int ) -> Callable Create a FastAPI exception handler for a particular status code. Parameters: Name Type Description Default status_code None HTTP status code. None Returns: Type Description callable an exception handler.","title":"errors"},{"location":"api/stac_fastapi/api/errors/#module-stac_fastapiapierrors","text":"Error handling. None","title":"Module stac_fastapi.api.errors"},{"location":"api/stac_fastapi/api/errors/#variables","text":"DEFAULT_STATUS_CODES logger","title":"Variables"},{"location":"api/stac_fastapi/api/errors/#functions","text":"","title":"Functions"},{"location":"api/stac_fastapi/api/errors/#add_exception_handlers","text":"def add_exception_handlers ( app : fastapi . applications . FastAPI , status_codes : Dict [ Type [ Exception ], int ] ) -> None Add exception handlers to the FastAPI application. Parameters: Name Type Description Default app None the FastAPI application. None status_codes None mapping between exceptions and status codes. None Returns: Type Description None None","title":"add_exception_handlers"},{"location":"api/stac_fastapi/api/errors/#exception_handler_factory","text":"def exception_handler_factory ( status_code : int ) -> Callable Create a FastAPI exception handler for a particular status code. Parameters: Name Type Description Default status_code None HTTP status code. None Returns: Type Description callable an exception handler.","title":"exception_handler_factory"},{"location":"api/stac_fastapi/api/middleware/","text":"Module stac_fastapi.api.middleware \u00b6 api middleware. None Functions \u00b6 router_middleware \u00b6 def router_middleware ( app : fastapi . applications . FastAPI , router : fastapi . routing . APIRouter ) Add middleware to a specific router, assumes no router prefix.","title":"middleware"},{"location":"api/stac_fastapi/api/middleware/#module-stac_fastapiapimiddleware","text":"api middleware. None","title":"Module stac_fastapi.api.middleware"},{"location":"api/stac_fastapi/api/middleware/#functions","text":"","title":"Functions"},{"location":"api/stac_fastapi/api/middleware/#router_middleware","text":"def router_middleware ( app : fastapi . applications . FastAPI , router : fastapi . routing . APIRouter ) Add middleware to a specific router, assumes no router prefix.","title":"router_middleware"},{"location":"api/stac_fastapi/api/models/","text":"Module stac_fastapi.api.models \u00b6 api request/response models. None Classes \u00b6 APIRequest \u00b6 class APIRequest ( ) Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.api.models.CollectionUri stac_fastapi.api.models.EmptyRequest stac_fastapi.api.models.SearchGetRequest Methods \u00b6 kwargs \u00b6 def kwargs ( self ) -> Dict Transform api request params into format which matches the signature of the endpoint. CollectionUri \u00b6 class CollectionUri ( collectionId : str = Path ( Ellipsis ) ) Ancestors (in MRO) \u00b6 stac_fastapi.api.models.APIRequest abc.ABC Descendants \u00b6 stac_fastapi.api.models.ItemUri stac_fastapi.api.models.ItemCollectionUri Methods \u00b6 kwargs \u00b6 def kwargs ( self ) -> Dict kwargs. EmptyRequest \u00b6 class EmptyRequest ( ) Ancestors (in MRO) \u00b6 stac_fastapi.api.models.APIRequest abc.ABC Methods \u00b6 kwargs \u00b6 def kwargs ( self ) -> Dict kwargs. ItemCollectionUri \u00b6 class ItemCollectionUri ( collectionId : str = Path ( Ellipsis ), limit : int = 10 , token : str = None ) Ancestors (in MRO) \u00b6 stac_fastapi.api.models.CollectionUri stac_fastapi.api.models.APIRequest abc.ABC Methods \u00b6 kwargs \u00b6 def kwargs ( self ) -> Dict kwargs. ItemUri \u00b6 class ItemUri ( collectionId : str = Path ( Ellipsis ), itemId : str = Path ( Ellipsis ) ) Ancestors (in MRO) \u00b6 stac_fastapi.api.models.CollectionUri stac_fastapi.api.models.APIRequest abc.ABC Methods \u00b6 kwargs \u00b6 def kwargs ( self ) -> Dict kwargs. SearchGetRequest \u00b6 class SearchGetRequest ( collections : Union [ str , NoneType ] = None , ids : Union [ str , NoneType ] = None , bbox : Union [ str , NoneType ] = None , datetime : Union [ str , NoneType ] = None , limit : Union [ int , NoneType ] = 10 , query : Union [ str , NoneType ] = None , token : Union [ str , NoneType ] = None , fields : Union [ str , NoneType ] = None , sortby : Union [ str , NoneType ] = None ) Ancestors (in MRO) \u00b6 stac_fastapi.api.models.APIRequest abc.ABC Methods \u00b6 kwargs \u00b6 def kwargs ( self ) -> Dict kwargs.","title":"models"},{"location":"api/stac_fastapi/api/models/#module-stac_fastapiapimodels","text":"api request/response models. None","title":"Module stac_fastapi.api.models"},{"location":"api/stac_fastapi/api/models/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/api/models/#apirequest","text":"class APIRequest ( )","title":"APIRequest"},{"location":"api/stac_fastapi/api/models/#ancestors-in-mro","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/models/#descendants","text":"stac_fastapi.api.models.CollectionUri stac_fastapi.api.models.EmptyRequest stac_fastapi.api.models.SearchGetRequest","title":"Descendants"},{"location":"api/stac_fastapi/api/models/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/models/#kwargs","text":"def kwargs ( self ) -> Dict Transform api request params into format which matches the signature of the endpoint.","title":"kwargs"},{"location":"api/stac_fastapi/api/models/#collectionuri","text":"class CollectionUri ( collectionId : str = Path ( Ellipsis ) )","title":"CollectionUri"},{"location":"api/stac_fastapi/api/models/#ancestors-in-mro_1","text":"stac_fastapi.api.models.APIRequest abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/models/#descendants_1","text":"stac_fastapi.api.models.ItemUri stac_fastapi.api.models.ItemCollectionUri","title":"Descendants"},{"location":"api/stac_fastapi/api/models/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/models/#kwargs_1","text":"def kwargs ( self ) -> Dict kwargs.","title":"kwargs"},{"location":"api/stac_fastapi/api/models/#emptyrequest","text":"class EmptyRequest ( )","title":"EmptyRequest"},{"location":"api/stac_fastapi/api/models/#ancestors-in-mro_2","text":"stac_fastapi.api.models.APIRequest abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/models/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/models/#kwargs_2","text":"def kwargs ( self ) -> Dict kwargs.","title":"kwargs"},{"location":"api/stac_fastapi/api/models/#itemcollectionuri","text":"class ItemCollectionUri ( collectionId : str = Path ( Ellipsis ), limit : int = 10 , token : str = None )","title":"ItemCollectionUri"},{"location":"api/stac_fastapi/api/models/#ancestors-in-mro_3","text":"stac_fastapi.api.models.CollectionUri stac_fastapi.api.models.APIRequest abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/models/#methods_3","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/models/#kwargs_3","text":"def kwargs ( self ) -> Dict kwargs.","title":"kwargs"},{"location":"api/stac_fastapi/api/models/#itemuri","text":"class ItemUri ( collectionId : str = Path ( Ellipsis ), itemId : str = Path ( Ellipsis ) )","title":"ItemUri"},{"location":"api/stac_fastapi/api/models/#ancestors-in-mro_4","text":"stac_fastapi.api.models.CollectionUri stac_fastapi.api.models.APIRequest abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/models/#methods_4","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/models/#kwargs_4","text":"def kwargs ( self ) -> Dict kwargs.","title":"kwargs"},{"location":"api/stac_fastapi/api/models/#searchgetrequest","text":"class SearchGetRequest ( collections : Union [ str , NoneType ] = None , ids : Union [ str , NoneType ] = None , bbox : Union [ str , NoneType ] = None , datetime : Union [ str , NoneType ] = None , limit : Union [ int , NoneType ] = 10 , query : Union [ str , NoneType ] = None , token : Union [ str , NoneType ] = None , fields : Union [ str , NoneType ] = None , sortby : Union [ str , NoneType ] = None )","title":"SearchGetRequest"},{"location":"api/stac_fastapi/api/models/#ancestors-in-mro_5","text":"stac_fastapi.api.models.APIRequest abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/api/models/#methods_5","text":"","title":"Methods"},{"location":"api/stac_fastapi/api/models/#kwargs_5","text":"def kwargs ( self ) -> Dict kwargs.","title":"kwargs"},{"location":"api/stac_fastapi/api/openapi/","text":"Module stac_fastapi.api.openapi \u00b6 openapi. None Functions \u00b6 config_openapi \u00b6 def config_openapi ( app : fastapi . applications . FastAPI , settings : stac_fastapi . types . config . ApiSettings ) Config openapi.","title":"openapi"},{"location":"api/stac_fastapi/api/openapi/#module-stac_fastapiapiopenapi","text":"openapi. None","title":"Module stac_fastapi.api.openapi"},{"location":"api/stac_fastapi/api/openapi/#functions","text":"","title":"Functions"},{"location":"api/stac_fastapi/api/openapi/#config_openapi","text":"def config_openapi ( app : fastapi . applications . FastAPI , settings : stac_fastapi . types . config . ApiSettings ) Config openapi.","title":"config_openapi"},{"location":"api/stac_fastapi/api/routes/","text":"Module stac_fastapi.api.routes \u00b6 route factories. None Functions \u00b6 create_endpoint_from_model \u00b6 def create_endpoint_from_model ( func : Callable , request_model : Type [ pydantic . main . BaseModel ] ) -> Callable Create a FastAPI endpoint from pydantic model. Wrap a callable in a function which uses the desired request model. It is expected that the signature of the callable matches that of the request model. This is best for validating request bodies (ex. POST requests). Parameters: Name Type Description Default func None the wrapped function. None request_model None a pydantic model. None Returns: Type Description callable fastapi route which may be added to a router/application create_endpoint_with_depends \u00b6 def create_endpoint_with_depends ( func : Callable , request_model : Type [ stac_fastapi . api . models . APIRequest ] ) -> Callable Create a FastAPI endpoint from an APIRequest (dataclass). Wrap a callable in a function which uses the desired APIRequest to define request parameters. It is expected that the return of APIRequest.kwargs matches that of the callable. This works best for validating query/path parameters (ex. GET request) and allows for dependency injection. Parameters: Name Type Description Default func None the wrapped function None request_model None subclass of APIRequest None Returns: Type Description callable fastapi route which may be added to a router/application","title":"routes"},{"location":"api/stac_fastapi/api/routes/#module-stac_fastapiapiroutes","text":"route factories. None","title":"Module stac_fastapi.api.routes"},{"location":"api/stac_fastapi/api/routes/#functions","text":"","title":"Functions"},{"location":"api/stac_fastapi/api/routes/#create_endpoint_from_model","text":"def create_endpoint_from_model ( func : Callable , request_model : Type [ pydantic . main . BaseModel ] ) -> Callable Create a FastAPI endpoint from pydantic model. Wrap a callable in a function which uses the desired request model. It is expected that the signature of the callable matches that of the request model. This is best for validating request bodies (ex. POST requests). Parameters: Name Type Description Default func None the wrapped function. None request_model None a pydantic model. None Returns: Type Description callable fastapi route which may be added to a router/application","title":"create_endpoint_from_model"},{"location":"api/stac_fastapi/api/routes/#create_endpoint_with_depends","text":"def create_endpoint_with_depends ( func : Callable , request_model : Type [ stac_fastapi . api . models . APIRequest ] ) -> Callable Create a FastAPI endpoint from an APIRequest (dataclass). Wrap a callable in a function which uses the desired APIRequest to define request parameters. It is expected that the return of APIRequest.kwargs matches that of the callable. This works best for validating query/path parameters (ex. GET request) and allows for dependency injection. Parameters: Name Type Description Default func None the wrapped function None request_model None subclass of APIRequest None Returns: Type Description callable fastapi route which may be added to a router/application","title":"create_endpoint_with_depends"},{"location":"api/stac_fastapi/api/version/","text":"Module stac_fastapi.api.version \u00b6 library version. None","title":"Module stac_fastapi.api.version"},{"location":"api/stac_fastapi/api/version/#module-stac_fastapiapiversion","text":"library version. None","title":"Module stac_fastapi.api.version"},{"location":"api/stac_fastapi/extensions/","text":"Module stac_fastapi.extensions \u00b6 extensions submodule. None Sub-modules \u00b6 stac_fastapi.extensions.core stac_fastapi.extensions.third_party stac_fastapi.extensions.version","title":"Module stac_fastapi.extensions"},{"location":"api/stac_fastapi/extensions/#module-stac_fastapiextensions","text":"extensions submodule. None","title":"Module stac_fastapi.extensions"},{"location":"api/stac_fastapi/extensions/#sub-modules","text":"stac_fastapi.extensions.core stac_fastapi.extensions.third_party stac_fastapi.extensions.version","title":"Sub-modules"},{"location":"api/stac_fastapi/extensions/version/","text":"Module stac_fastapi.extensions.version \u00b6 library version. None","title":"Module stac_fastapi.extensions.version"},{"location":"api/stac_fastapi/extensions/version/#module-stac_fastapiextensionsversion","text":"library version. None","title":"Module stac_fastapi.extensions.version"},{"location":"api/stac_fastapi/extensions/core/","text":"Module stac_fastapi.extensions.core \u00b6 stac_api.extensions.core module. None Sub-modules \u00b6 stac_fastapi.extensions.core.context stac_fastapi.extensions.core.fields stac_fastapi.extensions.core.query stac_fastapi.extensions.core.sort stac_fastapi.extensions.core.transaction Classes \u00b6 ContextExtension \u00b6 class ContextExtension ( ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None FieldsExtension \u00b6 class FieldsExtension ( default_includes : Set [ str ] = NOTHING ) Attributes \u00b6 Name Type Description Default default_includes set defines the default set of included fields. None Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app fastapi.FastAPI target FastAPI application. None Returns: Type Description None None QueryExtension \u00b6 class QueryExtension ( ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None SortExtension \u00b6 class SortExtension ( ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None TilesExtension \u00b6 class TilesExtension ( client : stac_fastapi . extensions . third_party . tiles . BaseTilesClient , route_prefix : str = '/titiler' ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None TransactionExtension \u00b6 class TransactionExtension ( client : stac_fastapi . types . core . BaseTransactionsClient ) Attributes \u00b6 Name Type Description Default client None CRUD application logic None Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"Module stac_fastapi.extensions.core"},{"location":"api/stac_fastapi/extensions/core/#module-stac_fastapiextensionscore","text":"stac_api.extensions.core module. None","title":"Module stac_fastapi.extensions.core"},{"location":"api/stac_fastapi/extensions/core/#sub-modules","text":"stac_fastapi.extensions.core.context stac_fastapi.extensions.core.fields stac_fastapi.extensions.core.query stac_fastapi.extensions.core.sort stac_fastapi.extensions.core.transaction","title":"Sub-modules"},{"location":"api/stac_fastapi/extensions/core/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/core/#contextextension","text":"class ContextExtension ( )","title":"ContextExtension"},{"location":"api/stac_fastapi/extensions/core/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/#fieldsextension","text":"class FieldsExtension ( default_includes : Set [ str ] = NOTHING )","title":"FieldsExtension"},{"location":"api/stac_fastapi/extensions/core/#attributes","text":"Name Type Description Default default_includes set defines the default set of included fields. None","title":"Attributes"},{"location":"api/stac_fastapi/extensions/core/#ancestors-in-mro_1","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/#register_1","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app fastapi.FastAPI target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/#queryextension","text":"class QueryExtension ( )","title":"QueryExtension"},{"location":"api/stac_fastapi/extensions/core/#ancestors-in-mro_2","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/#register_2","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/#sortextension","text":"class SortExtension ( )","title":"SortExtension"},{"location":"api/stac_fastapi/extensions/core/#ancestors-in-mro_3","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/#methods_3","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/#register_3","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/#tilesextension","text":"class TilesExtension ( client : stac_fastapi . extensions . third_party . tiles . BaseTilesClient , route_prefix : str = '/titiler' )","title":"TilesExtension"},{"location":"api/stac_fastapi/extensions/core/#ancestors-in-mro_4","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/#methods_4","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/#register_4","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/#transactionextension","text":"class TransactionExtension ( client : stac_fastapi . types . core . BaseTransactionsClient )","title":"TransactionExtension"},{"location":"api/stac_fastapi/extensions/core/#attributes_1","text":"Name Type Description Default client None CRUD application logic None","title":"Attributes"},{"location":"api/stac_fastapi/extensions/core/#ancestors-in-mro_5","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/#methods_5","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/#register_5","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/context/","text":"Module stac_fastapi.extensions.core.context \u00b6 context extension. None Classes \u00b6 ContextExtension \u00b6 class ContextExtension ( ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"context"},{"location":"api/stac_fastapi/extensions/core/context/#module-stac_fastapiextensionscorecontext","text":"context extension. None","title":"Module stac_fastapi.extensions.core.context"},{"location":"api/stac_fastapi/extensions/core/context/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/core/context/#contextextension","text":"class ContextExtension ( )","title":"ContextExtension"},{"location":"api/stac_fastapi/extensions/core/context/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/context/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/context/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/fields/","text":"Module stac_fastapi.extensions.core.fields \u00b6 fields extension. None Classes \u00b6 FieldsExtension \u00b6 class FieldsExtension ( default_includes : Set [ str ] = NOTHING ) Attributes \u00b6 Name Type Description Default default_includes set defines the default set of included fields. None Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app fastapi.FastAPI target FastAPI application. None Returns: Type Description None None","title":"fields"},{"location":"api/stac_fastapi/extensions/core/fields/#module-stac_fastapiextensionscorefields","text":"fields extension. None","title":"Module stac_fastapi.extensions.core.fields"},{"location":"api/stac_fastapi/extensions/core/fields/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/core/fields/#fieldsextension","text":"class FieldsExtension ( default_includes : Set [ str ] = NOTHING )","title":"FieldsExtension"},{"location":"api/stac_fastapi/extensions/core/fields/#attributes","text":"Name Type Description Default default_includes set defines the default set of included fields. None","title":"Attributes"},{"location":"api/stac_fastapi/extensions/core/fields/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/fields/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/fields/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app fastapi.FastAPI target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/query/","text":"Module stac_fastapi.extensions.core.query \u00b6 query extension. None Classes \u00b6 QueryExtension \u00b6 class QueryExtension ( ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"query"},{"location":"api/stac_fastapi/extensions/core/query/#module-stac_fastapiextensionscorequery","text":"query extension. None","title":"Module stac_fastapi.extensions.core.query"},{"location":"api/stac_fastapi/extensions/core/query/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/core/query/#queryextension","text":"class QueryExtension ( )","title":"QueryExtension"},{"location":"api/stac_fastapi/extensions/core/query/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/query/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/query/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/sort/","text":"Module stac_fastapi.extensions.core.sort \u00b6 sort extension. None Classes \u00b6 SortExtension \u00b6 class SortExtension ( ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"sort"},{"location":"api/stac_fastapi/extensions/core/sort/#module-stac_fastapiextensionscoresort","text":"sort extension. None","title":"Module stac_fastapi.extensions.core.sort"},{"location":"api/stac_fastapi/extensions/core/sort/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/core/sort/#sortextension","text":"class SortExtension ( )","title":"SortExtension"},{"location":"api/stac_fastapi/extensions/core/sort/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/sort/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/sort/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/core/transaction/","text":"Module stac_fastapi.extensions.core.transaction \u00b6 transaction extension. None Classes \u00b6 TransactionExtension \u00b6 class TransactionExtension ( client : stac_fastapi . types . core . BaseTransactionsClient ) Attributes \u00b6 Name Type Description Default client None CRUD application logic None Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"transaction"},{"location":"api/stac_fastapi/extensions/core/transaction/#module-stac_fastapiextensionscoretransaction","text":"transaction extension. None","title":"Module stac_fastapi.extensions.core.transaction"},{"location":"api/stac_fastapi/extensions/core/transaction/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/core/transaction/#transactionextension","text":"class TransactionExtension ( client : stac_fastapi . types . core . BaseTransactionsClient )","title":"TransactionExtension"},{"location":"api/stac_fastapi/extensions/core/transaction/#attributes","text":"Name Type Description Default client None CRUD application logic None","title":"Attributes"},{"location":"api/stac_fastapi/extensions/core/transaction/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/core/transaction/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/core/transaction/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/third_party/","text":"Module stac_fastapi.extensions.third_party \u00b6 stac_api.extensions.third_party module. None Sub-modules \u00b6 stac_fastapi.extensions.third_party.bulk_transactions stac_fastapi.extensions.third_party.tiles Classes \u00b6 BulkTransactionExtension \u00b6 class BulkTransactionExtension ( client : stac_fastapi . extensions . third_party . bulk_transactions . BaseBulkTransactionsClient ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None TilesExtension \u00b6 class TilesExtension ( client : stac_fastapi . extensions . third_party . tiles . BaseTilesClient , route_prefix : str = '/titiler' ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"Module stac_fastapi.extensions.third_party"},{"location":"api/stac_fastapi/extensions/third_party/#module-stac_fastapiextensionsthird_party","text":"stac_api.extensions.third_party module. None","title":"Module stac_fastapi.extensions.third_party"},{"location":"api/stac_fastapi/extensions/third_party/#sub-modules","text":"stac_fastapi.extensions.third_party.bulk_transactions stac_fastapi.extensions.third_party.tiles","title":"Sub-modules"},{"location":"api/stac_fastapi/extensions/third_party/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/third_party/#bulktransactionextension","text":"class BulkTransactionExtension ( client : stac_fastapi . extensions . third_party . bulk_transactions . BaseBulkTransactionsClient )","title":"BulkTransactionExtension"},{"location":"api/stac_fastapi/extensions/third_party/#ancestors-in-mro","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/third_party/#tilesextension","text":"class TilesExtension ( client : stac_fastapi . extensions . third_party . tiles . BaseTilesClient , route_prefix : str = '/titiler' )","title":"TilesExtension"},{"location":"api/stac_fastapi/extensions/third_party/#ancestors-in-mro_1","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/#register_1","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/","text":"Module stac_fastapi.extensions.third_party.bulk_transactions \u00b6 bulk transactions extension. None Classes \u00b6 BaseBulkTransactionsClient \u00b6 class BaseBulkTransactionsClient ( ) Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.sqlalchemy.transactions.BulkTransactionsClient Methods \u00b6 bulk_item_insert \u00b6 def bulk_item_insert ( self , items : stac_fastapi . extensions . third_party . bulk_transactions . Items , chunk_size : Union [ int , NoneType ] = None , ** kwargs ) -> str Bulk creation of items. Parameters: Name Type Description Default items None list of items. None chunk_size None number of items processed at a time. None Returns: Type Description None Message indicating the status of the insert. BulkTransactionExtension \u00b6 class BulkTransactionExtension ( client : stac_fastapi . extensions . third_party . bulk_transactions . BaseBulkTransactionsClient ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None Items \u00b6 class Items ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 pydantic.main.BaseModel pydantic.utils.Representation Descendants \u00b6 pydantic.main.Items Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"bulk_transactions"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#module-stac_fastapiextensionsthird_partybulk_transactions","text":"bulk transactions extension. None","title":"Module stac_fastapi.extensions.third_party.bulk_transactions"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#basebulktransactionsclient","text":"class BaseBulkTransactionsClient ( )","title":"BaseBulkTransactionsClient"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#ancestors-in-mro","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#descendants","text":"stac_fastapi.sqlalchemy.transactions.BulkTransactionsClient","title":"Descendants"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#bulk_item_insert","text":"def bulk_item_insert ( self , items : stac_fastapi . extensions . third_party . bulk_transactions . Items , chunk_size : Union [ int , NoneType ] = None , ** kwargs ) -> str Bulk creation of items. Parameters: Name Type Description Default items None list of items. None chunk_size None number of items processed at a time. None Returns: Type Description None Message indicating the status of the insert.","title":"bulk_item_insert"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#bulktransactionextension","text":"class BulkTransactionExtension ( client : stac_fastapi . extensions . third_party . bulk_transactions . BaseBulkTransactionsClient )","title":"BulkTransactionExtension"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#ancestors-in-mro_1","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#items","text":"class Items ( __pydantic_self__ , ** data : Any )","title":"Items"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#ancestors-in-mro_2","text":"pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#descendants_1","text":"pydantic.main.Items","title":"Descendants"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#class-variables","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#construct","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/extensions/third_party/bulk_transactions/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/extensions/third_party/tiles/","text":"Module stac_fastapi.extensions.third_party.tiles \u00b6 tiles extension. None Classes \u00b6 BaseTilesClient \u00b6 class BaseTilesClient ( ) Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.extensions.third_party.tiles.TilesClient Methods \u00b6 get_item_tiles \u00b6 def get_item_tiles ( self , id : str , ** kwargs ) -> Union [ starlette . responses . RedirectResponse , stac_fastapi . extensions . third_party . tiles . TileSetResource ] Get OGC TileSet resource for a stac item. Parameters: Name Type Description Default id None stac item id None Returns: Type Description None A TileSetResource, or a redirect to another endpoint which returns a TileSetResource. OGCTileLink \u00b6 class OGCTileLink ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 stac_pydantic.shared.Link pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() . TileLinks \u00b6 class TileLinks ( base_url : str , collection_id : str , item_id : str , route_prefix : str ) Methods \u00b6 create_links \u00b6 def create_links ( self ) -> List [ stac_fastapi . extensions . third_party . tiles . OGCTileLink ] Return all inferred links. tilejson \u00b6 def tilejson ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create tilejson link. tiles \u00b6 def tiles ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create tiles link. viewer \u00b6 def viewer ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create viewer link. wmts \u00b6 def wmts ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create wmts capabilities link. TileSetResource \u00b6 class TileSetResource ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() . TilesClient \u00b6 class TilesClient ( client : stac_fastapi . types . core . BaseCoreClient , route_prefix : str = '/titiler' ) Ancestors (in MRO) \u00b6 stac_fastapi.extensions.third_party.tiles.BaseTilesClient abc.ABC Methods \u00b6 get_item_tiles \u00b6 def get_item_tiles ( self , id : str , ** kwargs ) -> Union [ starlette . responses . RedirectResponse , stac_fastapi . extensions . third_party . tiles . TileSetResource ] Get OGC TileSet resource for a stac item. TilesExtension \u00b6 class TilesExtension ( client : stac_fastapi . extensions . third_party . tiles . BaseTilesClient , route_prefix : str = '/titiler' ) Ancestors (in MRO) \u00b6 stac_fastapi.types.extension.ApiExtension abc.ABC Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"tiles"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#module-stac_fastapiextensionsthird_partytiles","text":"tiles extension. None","title":"Module stac_fastapi.extensions.third_party.tiles"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#basetilesclient","text":"class BaseTilesClient ( )","title":"BaseTilesClient"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#ancestors-in-mro","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#descendants","text":"stac_fastapi.extensions.third_party.tiles.TilesClient","title":"Descendants"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#get_item_tiles","text":"def get_item_tiles ( self , id : str , ** kwargs ) -> Union [ starlette . responses . RedirectResponse , stac_fastapi . extensions . third_party . tiles . TileSetResource ] Get OGC TileSet resource for a stac item. Parameters: Name Type Description Default id None stac item id None Returns: Type Description None A TileSetResource, or a redirect to another endpoint which returns a TileSetResource.","title":"get_item_tiles"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#ogctilelink","text":"class OGCTileLink ( __pydantic_self__ , ** data : Any )","title":"OGCTileLink"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#ancestors-in-mro_1","text":"stac_pydantic.shared.Link pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#class-variables","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#construct","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#tilelinks","text":"class TileLinks ( base_url : str , collection_id : str , item_id : str , route_prefix : str )","title":"TileLinks"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#create_links","text":"def create_links ( self ) -> List [ stac_fastapi . extensions . third_party . tiles . OGCTileLink ] Return all inferred links.","title":"create_links"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#tilejson","text":"def tilejson ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create tilejson link.","title":"tilejson"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#tiles","text":"def tiles ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create tiles link.","title":"tiles"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#viewer","text":"def viewer ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create viewer link.","title":"viewer"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#wmts","text":"def wmts ( self ) -> stac_fastapi . extensions . third_party . tiles . OGCTileLink Create wmts capabilities link.","title":"wmts"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#tilesetresource","text":"class TileSetResource ( __pydantic_self__ , ** data : Any )","title":"TileSetResource"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#ancestors-in-mro_2","text":"pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#class-variables_1","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#static-methods_1","text":"","title":"Static methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#construct_1","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#from_orm_1","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#parse_file_1","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#parse_obj_1","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#parse_raw_1","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#schema_1","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#schema_json_1","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#update_forward_refs_1","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#validate_1","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#methods_3","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#copy_1","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#dict_1","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#json_1","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#tilesclient","text":"class TilesClient ( client : stac_fastapi . types . core . BaseCoreClient , route_prefix : str = '/titiler' )","title":"TilesClient"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#ancestors-in-mro_3","text":"stac_fastapi.extensions.third_party.tiles.BaseTilesClient abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#methods_4","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#get_item_tiles_1","text":"def get_item_tiles ( self , id : str , ** kwargs ) -> Union [ starlette . responses . RedirectResponse , stac_fastapi . extensions . third_party . tiles . TileSetResource ] Get OGC TileSet resource for a stac item.","title":"get_item_tiles"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#tilesextension","text":"class TilesExtension ( client : stac_fastapi . extensions . third_party . tiles . BaseTilesClient , route_prefix : str = '/titiler' )","title":"TilesExtension"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#ancestors-in-mro_4","text":"stac_fastapi.types.extension.ApiExtension abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#methods_5","text":"","title":"Methods"},{"location":"api/stac_fastapi/extensions/third_party/tiles/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/sqlalchemy/","text":"Module stac_fastapi.sqlalchemy \u00b6 postgres submodule. None Sub-modules \u00b6 stac_fastapi.sqlalchemy.app stac_fastapi.sqlalchemy.config stac_fastapi.sqlalchemy.core stac_fastapi.sqlalchemy.models stac_fastapi.sqlalchemy.session stac_fastapi.sqlalchemy.tokens stac_fastapi.sqlalchemy.transactions stac_fastapi.sqlalchemy.version","title":"Module stac_fastapi.sqlalchemy"},{"location":"api/stac_fastapi/sqlalchemy/#module-stac_fastapisqlalchemy","text":"postgres submodule. None","title":"Module stac_fastapi.sqlalchemy"},{"location":"api/stac_fastapi/sqlalchemy/#sub-modules","text":"stac_fastapi.sqlalchemy.app stac_fastapi.sqlalchemy.config stac_fastapi.sqlalchemy.core stac_fastapi.sqlalchemy.models stac_fastapi.sqlalchemy.session stac_fastapi.sqlalchemy.tokens stac_fastapi.sqlalchemy.transactions stac_fastapi.sqlalchemy.version","title":"Sub-modules"},{"location":"api/stac_fastapi/sqlalchemy/app/","text":"Module stac_fastapi.sqlalchemy.app \u00b6 FastAPI application. None Variables \u00b6 api app session settings","title":"Module stac_fastapi.sqlalchemy.app"},{"location":"api/stac_fastapi/sqlalchemy/app/#module-stac_fastapisqlalchemyapp","text":"FastAPI application. None","title":"Module stac_fastapi.sqlalchemy.app"},{"location":"api/stac_fastapi/sqlalchemy/app/#variables","text":"api app session settings","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/config/","text":"Module stac_fastapi.sqlalchemy.config \u00b6 Postgres API configuration. None Classes \u00b6 SqlalchemySettings \u00b6 class SqlalchemySettings ( __pydantic_self__ , _env_file : Union [ pathlib . Path , str , NoneType ] = '<object object at 0x7fe06e6a9360>' , _env_file_encoding : Union [ str , NoneType ] = None , _secrets_dir : Union [ pathlib . Path , str , NoneType ] = None , ** values : Any ) Attributes \u00b6 Name Type Description Default postgres_user None postgres username. None postgres_pass None postgres password. None postgres_host_reader None hostname for the reader connection. None postgres_host_writer None hostname for the writer connection. None postgres_port None database port. None postgres_dbname None database name. None Ancestors (in MRO) \u00b6 stac_fastapi.types.config.ApiSettings pydantic.env_settings.BaseSettings pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Instance variables \u00b6 reader_connection_string Create reader psql connection string. writer_connection_string Create writer psql connection string. Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"config"},{"location":"api/stac_fastapi/sqlalchemy/config/#module-stac_fastapisqlalchemyconfig","text":"Postgres API configuration. None","title":"Module stac_fastapi.sqlalchemy.config"},{"location":"api/stac_fastapi/sqlalchemy/config/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/config/#sqlalchemysettings","text":"class SqlalchemySettings ( __pydantic_self__ , _env_file : Union [ pathlib . Path , str , NoneType ] = '<object object at 0x7fe06e6a9360>' , _env_file_encoding : Union [ str , NoneType ] = None , _secrets_dir : Union [ pathlib . Path , str , NoneType ] = None , ** values : Any )","title":"SqlalchemySettings"},{"location":"api/stac_fastapi/sqlalchemy/config/#attributes","text":"Name Type Description Default postgres_user None postgres username. None postgres_pass None postgres password. None postgres_host_reader None hostname for the reader connection. None postgres_host_writer None hostname for the writer connection. None postgres_port None database port. None postgres_dbname None database name. None","title":"Attributes"},{"location":"api/stac_fastapi/sqlalchemy/config/#ancestors-in-mro","text":"stac_fastapi.types.config.ApiSettings pydantic.env_settings.BaseSettings pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/config/#class-variables","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/config/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/config/#construct","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/sqlalchemy/config/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/sqlalchemy/config/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/sqlalchemy/config/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/sqlalchemy/config/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/sqlalchemy/config/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/sqlalchemy/config/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/sqlalchemy/config/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/sqlalchemy/config/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/sqlalchemy/config/#instance-variables","text":"reader_connection_string Create reader psql connection string. writer_connection_string Create writer psql connection string.","title":"Instance variables"},{"location":"api/stac_fastapi/sqlalchemy/config/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/config/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/sqlalchemy/config/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/sqlalchemy/config/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/sqlalchemy/core/","text":"Module stac_fastapi.sqlalchemy.core \u00b6 Item crud client. None Variables \u00b6 NumType logger Classes \u00b6 CoreCrudClient \u00b6 class CoreCrudClient ( token_table : Type [ stac_fastapi . sqlalchemy . models . database . PaginationToken ] = < class ' stac_fastapi . sqlalchemy . models . database . PaginationToken '>, extensions : List [ stac_fastapi . types . extension . ApiExtension ] = NOTHING , session : stac_fastapi . sqlalchemy . session . Session = NOTHING , item_table : Type [ stac_fastapi . sqlalchemy . models . database . Item ] = < class ' stac_fastapi . sqlalchemy . models . database . Item '>, collection_table : Type [ stac_fastapi . sqlalchemy . models . database . Collection ] = < class ' stac_fastapi . sqlalchemy . models . database . Collection '> ) Ancestors (in MRO) \u00b6 stac_fastapi.sqlalchemy.tokens.PaginationTokenClient stac_fastapi.types.core.BaseCoreClient abc.ABC Methods \u00b6 all_collections \u00b6 def all_collections ( self , ** kwargs ) -> List [ stac_fastapi . sqlalchemy . models . schemas . Collection ] Read all collections from the database. conformance \u00b6 def conformance ( self , ** kwargs ) -> stac_pydantic . api . conformance . ConformanceClasses Conformance classes. extension_is_enabled \u00b6 def extension_is_enabled ( self , extension : Type [ stac_fastapi . types . extension . ApiExtension ] ) -> bool Check if an api extension is enabled. get_collection \u00b6 def get_collection ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Get collection by id. get_item \u00b6 def get_item ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Get item by id. get_search \u00b6 def get_search ( self , collections : Union [ List [ str ], NoneType ] = None , ids : Union [ List [ str ], NoneType ] = None , bbox : Union [ List [ Union [ float , int ]], NoneType ] = None , datetime : Union [ str , datetime . datetime , NoneType ] = None , limit : Union [ int , NoneType ] = 10 , query : Union [ str , NoneType ] = None , token : Union [ str , NoneType ] = None , fields : Union [ List [ str ], NoneType ] = None , sortby : Union [ str , NoneType ] = None , ** kwargs ) -> Dict [ str , Any ] GET search catalog. get_token \u00b6 def get_token ( self , token_id : str ) -> str Retrieve a keyset from the database. insert_token \u00b6 def insert_token ( self , keyset : str , tries : int = 0 ) -> str Insert a keyset into the database. item_collection \u00b6 def item_collection ( self , id : str , limit : int = 10 , token : str = None , ** kwargs ) -> stac_pydantic . item . ItemCollection Read an item collection from the database. landing_page \u00b6 def landing_page ( self , ** kwargs ) -> stac_pydantic . api . landing . LandingPage Landing page. post_search \u00b6 def post_search ( self , search_request : stac_fastapi . types . search . STACSearch , ** kwargs ) -> Dict [ str , Any ] POST search catalog.","title":"core"},{"location":"api/stac_fastapi/sqlalchemy/core/#module-stac_fastapisqlalchemycore","text":"Item crud client. None","title":"Module stac_fastapi.sqlalchemy.core"},{"location":"api/stac_fastapi/sqlalchemy/core/#variables","text":"NumType logger","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/core/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/core/#corecrudclient","text":"class CoreCrudClient ( token_table : Type [ stac_fastapi . sqlalchemy . models . database . PaginationToken ] = < class ' stac_fastapi . sqlalchemy . models . database . PaginationToken '>, extensions : List [ stac_fastapi . types . extension . ApiExtension ] = NOTHING , session : stac_fastapi . sqlalchemy . session . Session = NOTHING , item_table : Type [ stac_fastapi . sqlalchemy . models . database . Item ] = < class ' stac_fastapi . sqlalchemy . models . database . Item '>, collection_table : Type [ stac_fastapi . sqlalchemy . models . database . Collection ] = < class ' stac_fastapi . sqlalchemy . models . database . Collection '> )","title":"CoreCrudClient"},{"location":"api/stac_fastapi/sqlalchemy/core/#ancestors-in-mro","text":"stac_fastapi.sqlalchemy.tokens.PaginationTokenClient stac_fastapi.types.core.BaseCoreClient abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/core/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/core/#all_collections","text":"def all_collections ( self , ** kwargs ) -> List [ stac_fastapi . sqlalchemy . models . schemas . Collection ] Read all collections from the database.","title":"all_collections"},{"location":"api/stac_fastapi/sqlalchemy/core/#conformance","text":"def conformance ( self , ** kwargs ) -> stac_pydantic . api . conformance . ConformanceClasses Conformance classes.","title":"conformance"},{"location":"api/stac_fastapi/sqlalchemy/core/#extension_is_enabled","text":"def extension_is_enabled ( self , extension : Type [ stac_fastapi . types . extension . ApiExtension ] ) -> bool Check if an api extension is enabled.","title":"extension_is_enabled"},{"location":"api/stac_fastapi/sqlalchemy/core/#get_collection","text":"def get_collection ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Get collection by id.","title":"get_collection"},{"location":"api/stac_fastapi/sqlalchemy/core/#get_item","text":"def get_item ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Get item by id.","title":"get_item"},{"location":"api/stac_fastapi/sqlalchemy/core/#get_search","text":"def get_search ( self , collections : Union [ List [ str ], NoneType ] = None , ids : Union [ List [ str ], NoneType ] = None , bbox : Union [ List [ Union [ float , int ]], NoneType ] = None , datetime : Union [ str , datetime . datetime , NoneType ] = None , limit : Union [ int , NoneType ] = 10 , query : Union [ str , NoneType ] = None , token : Union [ str , NoneType ] = None , fields : Union [ List [ str ], NoneType ] = None , sortby : Union [ str , NoneType ] = None , ** kwargs ) -> Dict [ str , Any ] GET search catalog.","title":"get_search"},{"location":"api/stac_fastapi/sqlalchemy/core/#get_token","text":"def get_token ( self , token_id : str ) -> str Retrieve a keyset from the database.","title":"get_token"},{"location":"api/stac_fastapi/sqlalchemy/core/#insert_token","text":"def insert_token ( self , keyset : str , tries : int = 0 ) -> str Insert a keyset into the database.","title":"insert_token"},{"location":"api/stac_fastapi/sqlalchemy/core/#item_collection","text":"def item_collection ( self , id : str , limit : int = 10 , token : str = None , ** kwargs ) -> stac_pydantic . item . ItemCollection Read an item collection from the database.","title":"item_collection"},{"location":"api/stac_fastapi/sqlalchemy/core/#landing_page","text":"def landing_page ( self , ** kwargs ) -> stac_pydantic . api . landing . LandingPage Landing page.","title":"landing_page"},{"location":"api/stac_fastapi/sqlalchemy/core/#post_search","text":"def post_search ( self , search_request : stac_fastapi . types . search . STACSearch , ** kwargs ) -> Dict [ str , Any ] POST search catalog.","title":"post_search"},{"location":"api/stac_fastapi/sqlalchemy/session/","text":"Module stac_fastapi.sqlalchemy.session \u00b6 database session management. None Variables \u00b6 logger Classes \u00b6 FastAPISessionMaker \u00b6 class FastAPISessionMaker ( database_uri : str ) Ancestors (in MRO) \u00b6 fastapi_utils.session.FastAPISessionMaker Instance variables \u00b6 cached_engine Returns a lazily-cached sqlalchemy engine for the instance's database_uri. cached_sessionmaker Returns a lazily-cached sqlalchemy sessionmaker using the instance's (lazily-cached) engine. Methods \u00b6 context_session \u00b6 def context_session ( self ) -> Iterator [ sqlalchemy . orm . session . Session ] Override base method to include exception handling. get_db \u00b6 def get_db ( self ) -> Iterator [ sqlalchemy . orm . session . Session ] A generator function that yields a sqlalchemy orm session and cleans up the session once resumed after yielding. Can be used directly as a context-manager FastAPI dependency, or yielded from inside a separate dependency. get_new_engine \u00b6 def get_new_engine ( self ) -> sqlalchemy . engine . base . Engine Returns a new sqlalchemy engine using the instance's database_uri. get_new_sessionmaker \u00b6 def get_new_sessionmaker ( self , engine : Union [ sqlalchemy . engine . base . Engine , NoneType ] ) -> sqlalchemy . orm . session . sessionmaker Returns a new sessionmaker for the provided sqlalchemy engine. If no engine is provided, the instance's (lazily-cached) engine is used. reset_cache \u00b6 def reset_cache ( self ) -> None Resets the engine and sessionmaker caches. After calling this method, the next time you try to use the cached engine or sessionmaker, new ones will be created. Session \u00b6 class Session ( reader_conn_string : str , writer_conn_string : str ) Static methods \u00b6 create_from_env \u00b6 def create_from_env ( ) Create from environment. create_from_settings \u00b6 def create_from_settings ( settings : stac_fastapi . sqlalchemy . config . SqlalchemySettings ) -> 'Session' Create a Session object from settings.","title":"session"},{"location":"api/stac_fastapi/sqlalchemy/session/#module-stac_fastapisqlalchemysession","text":"database session management. None","title":"Module stac_fastapi.sqlalchemy.session"},{"location":"api/stac_fastapi/sqlalchemy/session/#variables","text":"logger","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/session/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/session/#fastapisessionmaker","text":"class FastAPISessionMaker ( database_uri : str )","title":"FastAPISessionMaker"},{"location":"api/stac_fastapi/sqlalchemy/session/#ancestors-in-mro","text":"fastapi_utils.session.FastAPISessionMaker","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/session/#instance-variables","text":"cached_engine Returns a lazily-cached sqlalchemy engine for the instance's database_uri. cached_sessionmaker Returns a lazily-cached sqlalchemy sessionmaker using the instance's (lazily-cached) engine.","title":"Instance variables"},{"location":"api/stac_fastapi/sqlalchemy/session/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/session/#context_session","text":"def context_session ( self ) -> Iterator [ sqlalchemy . orm . session . Session ] Override base method to include exception handling.","title":"context_session"},{"location":"api/stac_fastapi/sqlalchemy/session/#get_db","text":"def get_db ( self ) -> Iterator [ sqlalchemy . orm . session . Session ] A generator function that yields a sqlalchemy orm session and cleans up the session once resumed after yielding. Can be used directly as a context-manager FastAPI dependency, or yielded from inside a separate dependency.","title":"get_db"},{"location":"api/stac_fastapi/sqlalchemy/session/#get_new_engine","text":"def get_new_engine ( self ) -> sqlalchemy . engine . base . Engine Returns a new sqlalchemy engine using the instance's database_uri.","title":"get_new_engine"},{"location":"api/stac_fastapi/sqlalchemy/session/#get_new_sessionmaker","text":"def get_new_sessionmaker ( self , engine : Union [ sqlalchemy . engine . base . Engine , NoneType ] ) -> sqlalchemy . orm . session . sessionmaker Returns a new sessionmaker for the provided sqlalchemy engine. If no engine is provided, the instance's (lazily-cached) engine is used.","title":"get_new_sessionmaker"},{"location":"api/stac_fastapi/sqlalchemy/session/#reset_cache","text":"def reset_cache ( self ) -> None Resets the engine and sessionmaker caches. After calling this method, the next time you try to use the cached engine or sessionmaker, new ones will be created.","title":"reset_cache"},{"location":"api/stac_fastapi/sqlalchemy/session/#session","text":"class Session ( reader_conn_string : str , writer_conn_string : str )","title":"Session"},{"location":"api/stac_fastapi/sqlalchemy/session/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/session/#create_from_env","text":"def create_from_env ( ) Create from environment.","title":"create_from_env"},{"location":"api/stac_fastapi/sqlalchemy/session/#create_from_settings","text":"def create_from_settings ( settings : stac_fastapi . sqlalchemy . config . SqlalchemySettings ) -> 'Session' Create a Session object from settings.","title":"create_from_settings"},{"location":"api/stac_fastapi/sqlalchemy/tokens/","text":"Module stac_fastapi.sqlalchemy.tokens \u00b6 Pagination token client. None Variables \u00b6 logger Classes \u00b6 PaginationTokenClient \u00b6 class PaginationTokenClient ( session : stac_fastapi . sqlalchemy . session . Session = NOTHING , token_table : Type [ stac_fastapi . sqlalchemy . models . database . PaginationToken ] = < class ' stac_fastapi . sqlalchemy . models . database . PaginationToken '> ) Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.sqlalchemy.core.CoreCrudClient Methods \u00b6 get_token \u00b6 def get_token ( self , token_id : str ) -> str Retrieve a keyset from the database. insert_token \u00b6 def insert_token ( self , keyset : str , tries : int = 0 ) -> str Insert a keyset into the database.","title":"tokens"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#module-stac_fastapisqlalchemytokens","text":"Pagination token client. None","title":"Module stac_fastapi.sqlalchemy.tokens"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#variables","text":"logger","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#paginationtokenclient","text":"class PaginationTokenClient ( session : stac_fastapi . sqlalchemy . session . Session = NOTHING , token_table : Type [ stac_fastapi . sqlalchemy . models . database . PaginationToken ] = < class ' stac_fastapi . sqlalchemy . models . database . PaginationToken '> )","title":"PaginationTokenClient"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#ancestors-in-mro","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#descendants","text":"stac_fastapi.sqlalchemy.core.CoreCrudClient","title":"Descendants"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#get_token","text":"def get_token ( self , token_id : str ) -> str Retrieve a keyset from the database.","title":"get_token"},{"location":"api/stac_fastapi/sqlalchemy/tokens/#insert_token","text":"def insert_token ( self , keyset : str , tries : int = 0 ) -> str Insert a keyset into the database.","title":"insert_token"},{"location":"api/stac_fastapi/sqlalchemy/transactions/","text":"Module stac_fastapi.sqlalchemy.transactions \u00b6 transactions extension client. None Variables \u00b6 logger Classes \u00b6 BulkTransactionsClient \u00b6 class BulkTransactionsClient ( session : stac_fastapi . sqlalchemy . session . Session = NOTHING , debug : bool = False ) Ancestors (in MRO) \u00b6 stac_fastapi.extensions.third_party.bulk_transactions.BaseBulkTransactionsClient abc.ABC Methods \u00b6 bulk_item_insert \u00b6 def bulk_item_insert ( self , items : stac_fastapi . sqlalchemy . models . schemas . Items , chunk_size : Union [ int , NoneType ] = None , ** kwargs ) -> str Bulk item insertion using sqlalchemy core. docs.sqlalchemy.org/en/13/faq/performance.html#i-m-inserting-400-000-rows-with-the-orm-and-it-s-really-slow TransactionsClient \u00b6 class TransactionsClient ( session : stac_fastapi . sqlalchemy . session . Session = NOTHING , collection_table : Type [ stac_fastapi . sqlalchemy . models . database . Collection ] = < class ' stac_fastapi . sqlalchemy . models . database . Collection '>, item_table : Type [ stac_fastapi . sqlalchemy . models . database . Item ] = < class ' stac_fastapi . sqlalchemy . models . database . Item '> ) Ancestors (in MRO) \u00b6 stac_fastapi.types.core.BaseTransactionsClient abc.ABC Methods \u00b6 create_collection \u00b6 def create_collection ( self , model : stac_fastapi . sqlalchemy . models . schemas . Collection , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Create collection. create_item \u00b6 def create_item ( self , model : stac_fastapi . sqlalchemy . models . schemas . Item , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Create item. delete_collection \u00b6 def delete_collection ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Delete collection. delete_item \u00b6 def delete_item ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Delete item. update_collection \u00b6 def update_collection ( self , model : stac_fastapi . sqlalchemy . models . schemas . Collection , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Update collection. update_item \u00b6 def update_item ( self , model : stac_fastapi . sqlalchemy . models . schemas . Item , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Update item.","title":"transactions"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#module-stac_fastapisqlalchemytransactions","text":"transactions extension client. None","title":"Module stac_fastapi.sqlalchemy.transactions"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#variables","text":"logger","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#bulktransactionsclient","text":"class BulkTransactionsClient ( session : stac_fastapi . sqlalchemy . session . Session = NOTHING , debug : bool = False )","title":"BulkTransactionsClient"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#ancestors-in-mro","text":"stac_fastapi.extensions.third_party.bulk_transactions.BaseBulkTransactionsClient abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#bulk_item_insert","text":"def bulk_item_insert ( self , items : stac_fastapi . sqlalchemy . models . schemas . Items , chunk_size : Union [ int , NoneType ] = None , ** kwargs ) -> str Bulk item insertion using sqlalchemy core. docs.sqlalchemy.org/en/13/faq/performance.html#i-m-inserting-400-000-rows-with-the-orm-and-it-s-really-slow","title":"bulk_item_insert"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#transactionsclient","text":"class TransactionsClient ( session : stac_fastapi . sqlalchemy . session . Session = NOTHING , collection_table : Type [ stac_fastapi . sqlalchemy . models . database . Collection ] = < class ' stac_fastapi . sqlalchemy . models . database . Collection '>, item_table : Type [ stac_fastapi . sqlalchemy . models . database . Item ] = < class ' stac_fastapi . sqlalchemy . models . database . Item '> )","title":"TransactionsClient"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#ancestors-in-mro_1","text":"stac_fastapi.types.core.BaseTransactionsClient abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#create_collection","text":"def create_collection ( self , model : stac_fastapi . sqlalchemy . models . schemas . Collection , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Create collection.","title":"create_collection"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#create_item","text":"def create_item ( self , model : stac_fastapi . sqlalchemy . models . schemas . Item , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Create item.","title":"create_item"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#delete_collection","text":"def delete_collection ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Delete collection.","title":"delete_collection"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#delete_item","text":"def delete_item ( self , id : str , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Delete item.","title":"delete_item"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#update_collection","text":"def update_collection ( self , model : stac_fastapi . sqlalchemy . models . schemas . Collection , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Collection Update collection.","title":"update_collection"},{"location":"api/stac_fastapi/sqlalchemy/transactions/#update_item","text":"def update_item ( self , model : stac_fastapi . sqlalchemy . models . schemas . Item , ** kwargs ) -> stac_fastapi . sqlalchemy . models . schemas . Item Update item.","title":"update_item"},{"location":"api/stac_fastapi/sqlalchemy/version/","text":"Module stac_fastapi.sqlalchemy.version \u00b6 library version. None","title":"version"},{"location":"api/stac_fastapi/sqlalchemy/version/#module-stac_fastapisqlalchemyversion","text":"library version. None","title":"Module stac_fastapi.sqlalchemy.version"},{"location":"api/stac_fastapi/sqlalchemy/models/","text":"Module stac_fastapi.sqlalchemy.models \u00b6 stac_fastapi.postgres.models module. None Sub-modules \u00b6 stac_fastapi.sqlalchemy.models.database stac_fastapi.sqlalchemy.models.decompose stac_fastapi.sqlalchemy.models.links stac_fastapi.sqlalchemy.models.schemas","title":"Module stac_fastapi.sqlalchemy.models"},{"location":"api/stac_fastapi/sqlalchemy/models/#module-stac_fastapisqlalchemymodels","text":"stac_fastapi.postgres.models module. None","title":"Module stac_fastapi.sqlalchemy.models"},{"location":"api/stac_fastapi/sqlalchemy/models/#sub-modules","text":"stac_fastapi.sqlalchemy.models.database stac_fastapi.sqlalchemy.models.decompose stac_fastapi.sqlalchemy.models.links stac_fastapi.sqlalchemy.models.schemas","title":"Sub-modules"},{"location":"api/stac_fastapi/sqlalchemy/models/database/","text":"Module stac_fastapi.sqlalchemy.models.database \u00b6 SQLAlchemy ORM models. None Variables \u00b6 DATETIME_RFC339 Classes \u00b6 BaseModel \u00b6 class BaseModel ( ** kwargs ) Descendants \u00b6 stac_fastapi.sqlalchemy.models.database.Collection stac_fastapi.sqlalchemy.models.database.Item stac_fastapi.sqlalchemy.models.database.PaginationToken Class variables \u00b6 metadata Collection \u00b6 class Collection ( ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.sqlalchemy.models.database.Base Class variables \u00b6 children description extent id keywords license links metadata providers stac_extensions stac_version summaries title version Static methods \u00b6 from_schema \u00b6 def from_schema ( schema : stac_fastapi . sqlalchemy . models . schemas . Collection ) -> 'Collection' Create orm model from pydantic model. get_database_model \u00b6 def get_database_model ( schema : stac_fastapi . sqlalchemy . models . schemas . Collection ) -> dict Decompose pydantic model to data model. GeojsonGeometry \u00b6 class GeojsonGeometry ( geometry_type = 'GEOMETRY' , srid =- 1 , dimension = 2 , spatial_index = True , management = False , use_typmod = None ) Ancestors (in MRO) \u00b6 geoalchemy2.types.Geometry geoalchemy2.types._GISType sqlalchemy.sql.type_api.UserDefinedType sqlalchemy.sql.type_api.TypeEngine sqlalchemy.sql.visitors.Visitable Class variables \u00b6 Comparator as_binary comparator_factory ensure_kwarg from_text hashable name should_evaluate_none sort_key_function Static methods \u00b6 check_ctor_args \u00b6 def check_ctor_args ( geometry_type , srid , dimension , management , use_typmod ) Instance variables \u00b6 python_type Return the Python type object expected to be returned by instances of this type, if known. Basically, for those types which enforce a return type, or are known across the board to do such for all common DBAPIs (like int for example), will return that type. If a return type is not defined, raises NotImplementedError . Note that any type also accommodates NULL in SQL which means you can also get back None from any type in practice. Methods \u00b6 adapt \u00b6 def adapt ( self , cls , ** kw ) Produce an \"adapted\" form of this type, given an \"impl\" class to work with. This method is used internally to associate generic types with \"implementation\" types that are specific to a particular dialect. bind_expression \u00b6 def bind_expression ( self , bindvalue ) Given a bind value (i.e. a :class: .BindParameter instance), return a SQL expression in its place. This is typically a SQL function that wraps the existing bound parameter within the statement. It is used for special data types that require literals being wrapped in some special database function in order to coerce an application-level value into a database-specific format. It is the SQL analogue of the bind_processor \u00b6 def bind_processor ( self , dialect ) Return a conversion function for processing bind values. Returns a callable which will receive a bind parameter value as the sole positional argument and will return a value to send to the DB-API. If processing is not necessary, the method should return None . Parameters: Name Type Description Default dialect None Dialect instance in use. None coerce_compared_value \u00b6 def coerce_compared_value ( self , op , value ) Suggest a type for a 'coerced' Python value in an expression. Default behavior for :class: .UserDefinedType is the same as that of :class: .TypeDecorator ; by default it returns self , assuming the compared value should be coerced into the same type as this one. See column_expression \u00b6 def column_expression ( self , col ) Given a SELECT column expression, return a wrapping SQL expression. This is typically a SQL function that wraps a column expression as rendered in the columns clause of a SELECT statement. It is used for special data types that require columns to be wrapped in some special database function in order to coerce the value before being sent back to the application. It is the SQL analogue of the :meth: .TypeEngine.result_processor method. The method is evaluated at statement compile time, as opposed to statement construction time. .. seealso:: :ref:`types_sql_value_processing` compare_against_backend \u00b6 def compare_against_backend ( self , dialect , conn_type ) Compare this type against the given backend type. This function is currently not implemented for SQLAlchemy types, and for all built in types will return None . However, it can be implemented by a user-defined type where it can be consumed by schema comparison tools such as Alembic autogenerate. A future release of SQLAlchemy will potentially implement this method for builtin types as well. The function should return True if this type is equivalent to the given type; the type is typically reflected from the database so should be database specific. The dialect in use is also passed. It can also return False to assert that the type is not equivalent. Parameters: Name Type Description Default dialect None a :class: .Dialect that is involved in the comparison. None conn_type None the type object reflected from the backend. .. versionadded:: 1.0.3 None compare_values \u00b6 def compare_values ( self , x , y ) Compare two values for equality. compile \u00b6 def compile ( self , dialect = None ) Produce a string-compiled form of this :class: .TypeEngine . When called with no arguments, uses a \"default\" dialect to produce a string result. Parameters: Name Type Description Default dialect None a :class: .Dialect instance. None copy \u00b6 def copy ( self , ** kw ) copy_value \u00b6 def copy_value ( self , value ) dialect_impl \u00b6 def dialect_impl ( self , dialect ) Return a dialect-specific implementation for this evaluates_none \u00b6 def evaluates_none ( self ) Return a copy of this type which has the :attr: .should_evaluate_none flag set to True. E.g.:: Table( 'some_table', metadata, Column( String(50).evaluates_none(), nullable=True, server_default='no value') ) The ORM uses this flag to indicate that a positive value of None is passed to the column in an INSERT statement, rather than omitting the column from the INSERT statement which has the effect of firing off column-level defaults. It also allows for types which have special behavior associated with the Python None value to indicate that the value doesn't necessarily translate into SQL NULL; a prime example of this is a JSON type which may wish to persist the JSON value 'null' . In all cases, the actual NULL SQL value can be always be persisted in any column by using the :obj: _expression.null SQL construct in an INSERT statement or associated with an ORM-mapped attribute. .. note:: The \"evaluates none\" flag does **not** apply to a value of ``None`` passed to :paramref:`_schema.Column.default` or :paramref:`_schema.Column.server_default`; in these cases, ``None`` still means \"no default\". .. versionadded:: 1.1 .. seealso:: :ref:`session_forcing_null` - in the ORM documentation :paramref:`.postgresql.JSON.none_as_null` - PostgreSQL JSON interaction with this flag. :attr:`.TypeEngine.should_evaluate_none` - class-level flag get_col_spec \u00b6 def get_col_spec ( self ) get_dbapi_type \u00b6 def get_dbapi_type ( self , dbapi ) Return the corresponding type object from the underlying DB-API, if any. This can be useful for calling setinputsizes() , for example. literal_processor \u00b6 def literal_processor ( self , dialect ) Return a conversion function for processing literal values that are to be rendered directly without using binds. This function is used when the compiler makes use of the \"literal_binds\" flag, typically used in DDL generation as well as in certain scenarios where backends don't accept bound parameters. .. versionadded:: 0.9.0 result_processor \u00b6 def result_processor ( self , dialect : str , coltype ) Override default processer to return GeoJSON. with_variant \u00b6 def with_variant ( self , type_ , dialect_name ) Produce a new type object that will utilize the given type when applied to the dialect of the given name. e.g.:: from sqlalchemy.types import String from sqlalchemy.dialects import mysql s = String() s = s.with_variant(mysql.VARCHAR(collation='foo'), 'mysql') The construction of :meth: .TypeEngine.with_variant is always from the \"fallback\" type to that which is dialect specific. The returned type is an instance of :class: .Variant , which itself provides a :meth: .Variant.with_variant that can be called repeatedly. Parameters: Name Type Description Default type_ None a :class: .TypeEngine that will be selected as a variant from the originating type, when a dialect of the given name is in use. None dialect_name None base name of the dialect which uses this type. (i.e. 'postgresql' , 'mysql' , etc.) None Item \u00b6 class Item ( ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.sqlalchemy.models.database.Base Class variables \u00b6 assets bbox collection_id datetime geometry id links metadata parent_collection properties stac_extensions stac_version Static methods \u00b6 from_schema \u00b6 def from_schema ( schema : stac_fastapi . sqlalchemy . models . schemas . Item ) -> 'Item' Create orm model from pydantic model. get_database_model \u00b6 def get_database_model ( schema : stac_fastapi . sqlalchemy . models . schemas . Item ) -> dict Decompose pydantic model to data model. get_field \u00b6 def get_field ( field_name ) Get a model field. PaginationToken \u00b6 class PaginationToken ( ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.sqlalchemy.models.database.Base Class variables \u00b6 id keyset metadata","title":"database"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#module-stac_fastapisqlalchemymodelsdatabase","text":"SQLAlchemy ORM models. None","title":"Module stac_fastapi.sqlalchemy.models.database"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#variables","text":"DATETIME_RFC339","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#basemodel","text":"class BaseModel ( ** kwargs )","title":"BaseModel"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#descendants","text":"stac_fastapi.sqlalchemy.models.database.Collection stac_fastapi.sqlalchemy.models.database.Item stac_fastapi.sqlalchemy.models.database.PaginationToken","title":"Descendants"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#class-variables","text":"metadata","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#collection","text":"class Collection ( ** kwargs )","title":"Collection"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#ancestors-in-mro","text":"stac_fastapi.sqlalchemy.models.database.Base","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#class-variables_1","text":"children description extent id keywords license links metadata providers stac_extensions stac_version summaries title version","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#from_schema","text":"def from_schema ( schema : stac_fastapi . sqlalchemy . models . schemas . Collection ) -> 'Collection' Create orm model from pydantic model.","title":"from_schema"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#get_database_model","text":"def get_database_model ( schema : stac_fastapi . sqlalchemy . models . schemas . Collection ) -> dict Decompose pydantic model to data model.","title":"get_database_model"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#geojsongeometry","text":"class GeojsonGeometry ( geometry_type = 'GEOMETRY' , srid =- 1 , dimension = 2 , spatial_index = True , management = False , use_typmod = None )","title":"GeojsonGeometry"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#ancestors-in-mro_1","text":"geoalchemy2.types.Geometry geoalchemy2.types._GISType sqlalchemy.sql.type_api.UserDefinedType sqlalchemy.sql.type_api.TypeEngine sqlalchemy.sql.visitors.Visitable","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#class-variables_2","text":"Comparator as_binary comparator_factory ensure_kwarg from_text hashable name should_evaluate_none sort_key_function","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#static-methods_1","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#check_ctor_args","text":"def check_ctor_args ( geometry_type , srid , dimension , management , use_typmod )","title":"check_ctor_args"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#instance-variables","text":"python_type Return the Python type object expected to be returned by instances of this type, if known. Basically, for those types which enforce a return type, or are known across the board to do such for all common DBAPIs (like int for example), will return that type. If a return type is not defined, raises NotImplementedError . Note that any type also accommodates NULL in SQL which means you can also get back None from any type in practice.","title":"Instance variables"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#adapt","text":"def adapt ( self , cls , ** kw ) Produce an \"adapted\" form of this type, given an \"impl\" class to work with. This method is used internally to associate generic types with \"implementation\" types that are specific to a particular dialect.","title":"adapt"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#bind_expression","text":"def bind_expression ( self , bindvalue ) Given a bind value (i.e. a :class: .BindParameter instance), return a SQL expression in its place. This is typically a SQL function that wraps the existing bound parameter within the statement. It is used for special data types that require literals being wrapped in some special database function in order to coerce an application-level value into a database-specific format. It is the SQL analogue of the","title":"bind_expression"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#bind_processor","text":"def bind_processor ( self , dialect ) Return a conversion function for processing bind values. Returns a callable which will receive a bind parameter value as the sole positional argument and will return a value to send to the DB-API. If processing is not necessary, the method should return None . Parameters: Name Type Description Default dialect None Dialect instance in use. None","title":"bind_processor"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#coerce_compared_value","text":"def coerce_compared_value ( self , op , value ) Suggest a type for a 'coerced' Python value in an expression. Default behavior for :class: .UserDefinedType is the same as that of :class: .TypeDecorator ; by default it returns self , assuming the compared value should be coerced into the same type as this one. See","title":"coerce_compared_value"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#column_expression","text":"def column_expression ( self , col ) Given a SELECT column expression, return a wrapping SQL expression. This is typically a SQL function that wraps a column expression as rendered in the columns clause of a SELECT statement. It is used for special data types that require columns to be wrapped in some special database function in order to coerce the value before being sent back to the application. It is the SQL analogue of the :meth: .TypeEngine.result_processor method. The method is evaluated at statement compile time, as opposed to statement construction time. .. seealso:: :ref:`types_sql_value_processing`","title":"column_expression"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#compare_against_backend","text":"def compare_against_backend ( self , dialect , conn_type ) Compare this type against the given backend type. This function is currently not implemented for SQLAlchemy types, and for all built in types will return None . However, it can be implemented by a user-defined type where it can be consumed by schema comparison tools such as Alembic autogenerate. A future release of SQLAlchemy will potentially implement this method for builtin types as well. The function should return True if this type is equivalent to the given type; the type is typically reflected from the database so should be database specific. The dialect in use is also passed. It can also return False to assert that the type is not equivalent. Parameters: Name Type Description Default dialect None a :class: .Dialect that is involved in the comparison. None conn_type None the type object reflected from the backend. .. versionadded:: 1.0.3 None","title":"compare_against_backend"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#compare_values","text":"def compare_values ( self , x , y ) Compare two values for equality.","title":"compare_values"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#compile","text":"def compile ( self , dialect = None ) Produce a string-compiled form of this :class: .TypeEngine . When called with no arguments, uses a \"default\" dialect to produce a string result. Parameters: Name Type Description Default dialect None a :class: .Dialect instance. None","title":"compile"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#copy","text":"def copy ( self , ** kw )","title":"copy"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#copy_value","text":"def copy_value ( self , value )","title":"copy_value"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#dialect_impl","text":"def dialect_impl ( self , dialect ) Return a dialect-specific implementation for this","title":"dialect_impl"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#evaluates_none","text":"def evaluates_none ( self ) Return a copy of this type which has the :attr: .should_evaluate_none flag set to True. E.g.:: Table( 'some_table', metadata, Column( String(50).evaluates_none(), nullable=True, server_default='no value') ) The ORM uses this flag to indicate that a positive value of None is passed to the column in an INSERT statement, rather than omitting the column from the INSERT statement which has the effect of firing off column-level defaults. It also allows for types which have special behavior associated with the Python None value to indicate that the value doesn't necessarily translate into SQL NULL; a prime example of this is a JSON type which may wish to persist the JSON value 'null' . In all cases, the actual NULL SQL value can be always be persisted in any column by using the :obj: _expression.null SQL construct in an INSERT statement or associated with an ORM-mapped attribute. .. note:: The \"evaluates none\" flag does **not** apply to a value of ``None`` passed to :paramref:`_schema.Column.default` or :paramref:`_schema.Column.server_default`; in these cases, ``None`` still means \"no default\". .. versionadded:: 1.1 .. seealso:: :ref:`session_forcing_null` - in the ORM documentation :paramref:`.postgresql.JSON.none_as_null` - PostgreSQL JSON interaction with this flag. :attr:`.TypeEngine.should_evaluate_none` - class-level flag","title":"evaluates_none"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#get_col_spec","text":"def get_col_spec ( self )","title":"get_col_spec"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#get_dbapi_type","text":"def get_dbapi_type ( self , dbapi ) Return the corresponding type object from the underlying DB-API, if any. This can be useful for calling setinputsizes() , for example.","title":"get_dbapi_type"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#literal_processor","text":"def literal_processor ( self , dialect ) Return a conversion function for processing literal values that are to be rendered directly without using binds. This function is used when the compiler makes use of the \"literal_binds\" flag, typically used in DDL generation as well as in certain scenarios where backends don't accept bound parameters. .. versionadded:: 0.9.0","title":"literal_processor"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#result_processor","text":"def result_processor ( self , dialect : str , coltype ) Override default processer to return GeoJSON.","title":"result_processor"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#with_variant","text":"def with_variant ( self , type_ , dialect_name ) Produce a new type object that will utilize the given type when applied to the dialect of the given name. e.g.:: from sqlalchemy.types import String from sqlalchemy.dialects import mysql s = String() s = s.with_variant(mysql.VARCHAR(collation='foo'), 'mysql') The construction of :meth: .TypeEngine.with_variant is always from the \"fallback\" type to that which is dialect specific. The returned type is an instance of :class: .Variant , which itself provides a :meth: .Variant.with_variant that can be called repeatedly. Parameters: Name Type Description Default type_ None a :class: .TypeEngine that will be selected as a variant from the originating type, when a dialect of the given name is in use. None dialect_name None base name of the dialect which uses this type. (i.e. 'postgresql' , 'mysql' , etc.) None","title":"with_variant"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#item","text":"class Item ( ** kwargs )","title":"Item"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#ancestors-in-mro_2","text":"stac_fastapi.sqlalchemy.models.database.Base","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#class-variables_3","text":"assets bbox collection_id datetime geometry id links metadata parent_collection properties stac_extensions stac_version","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#static-methods_2","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#from_schema_1","text":"def from_schema ( schema : stac_fastapi . sqlalchemy . models . schemas . Item ) -> 'Item' Create orm model from pydantic model.","title":"from_schema"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#get_database_model_1","text":"def get_database_model ( schema : stac_fastapi . sqlalchemy . models . schemas . Item ) -> dict Decompose pydantic model to data model.","title":"get_database_model"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#get_field","text":"def get_field ( field_name ) Get a model field.","title":"get_field"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#paginationtoken","text":"class PaginationToken ( ** kwargs )","title":"PaginationToken"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#ancestors-in-mro_3","text":"stac_fastapi.sqlalchemy.models.database.Base","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/database/#class-variables_4","text":"id keyset metadata","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/","text":"Module stac_fastapi.sqlalchemy.models.decompose \u00b6 Model serialization. None Variables \u00b6 DATETIME_RFC339 Functions \u00b6 resolve_links \u00b6 def resolve_links ( links : list , base_url : str ) -> List [ Dict ] Convert relative links to absolute links. Classes \u00b6 CollectionGetter \u00b6 class CollectionGetter ( obj : Any ) Ancestors (in MRO) \u00b6 pydantic.utils.GetterDict pydantic.utils.Representation Methods \u00b6 extra_keys \u00b6 def extra_keys ( self ) -> Set [ Any ] We don't want to get any other attributes of obj if the model didn't explicitly ask for them get \u00b6 def get ( self , key : Any , default : Any = None ) -> Any items \u00b6 def items ( self ) -> Iterator [ Tuple [ str , Any ]] keys \u00b6 def keys ( self ) -> List [ Any ] Keys of the pseudo dictionary, uses a list not set so order information can be maintained like python dictionaries. values \u00b6 def values ( self ) -> List [ Any ] ItemGetter \u00b6 class ItemGetter ( obj : Any ) Ancestors (in MRO) \u00b6 pydantic.utils.GetterDict pydantic.utils.Representation Static methods \u00b6 decode_geom \u00b6 def decode_geom ( geom : Union [ geoalchemy2 . elements . WKBElement , str , Dict ] ) -> Dict Decode geoalchemy type to geojson. Methods \u00b6 extra_keys \u00b6 def extra_keys ( self ) -> Set [ Any ] We don't want to get any other attributes of obj if the model didn't explicitly ask for them get \u00b6 def get ( self , key : Any , default : Any = None ) -> Any items \u00b6 def items ( self ) -> Iterator [ Tuple [ str , Any ]] keys \u00b6 def keys ( self ) -> List [ Any ] Keys of the pseudo dictionary, uses a list not set so order information can be maintained like python dictionaries. values \u00b6 def values ( self ) -> List [ Any ]","title":"decompose"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#module-stac_fastapisqlalchemymodelsdecompose","text":"Model serialization. None","title":"Module stac_fastapi.sqlalchemy.models.decompose"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#variables","text":"DATETIME_RFC339","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#functions","text":"","title":"Functions"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#resolve_links","text":"def resolve_links ( links : list , base_url : str ) -> List [ Dict ] Convert relative links to absolute links.","title":"resolve_links"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#collectiongetter","text":"class CollectionGetter ( obj : Any )","title":"CollectionGetter"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#ancestors-in-mro","text":"pydantic.utils.GetterDict pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#extra_keys","text":"def extra_keys ( self ) -> Set [ Any ] We don't want to get any other attributes of obj if the model didn't explicitly ask for them","title":"extra_keys"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#get","text":"def get ( self , key : Any , default : Any = None ) -> Any","title":"get"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#items","text":"def items ( self ) -> Iterator [ Tuple [ str , Any ]]","title":"items"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#keys","text":"def keys ( self ) -> List [ Any ] Keys of the pseudo dictionary, uses a list not set so order information can be maintained like python dictionaries.","title":"keys"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#values","text":"def values ( self ) -> List [ Any ]","title":"values"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#itemgetter","text":"class ItemGetter ( obj : Any )","title":"ItemGetter"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#ancestors-in-mro_1","text":"pydantic.utils.GetterDict pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#decode_geom","text":"def decode_geom ( geom : Union [ geoalchemy2 . elements . WKBElement , str , Dict ] ) -> Dict Decode geoalchemy type to geojson.","title":"decode_geom"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#extra_keys_1","text":"def extra_keys ( self ) -> Set [ Any ] We don't want to get any other attributes of obj if the model didn't explicitly ask for them","title":"extra_keys"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#get_1","text":"def get ( self , key : Any , default : Any = None ) -> Any","title":"get"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#items_1","text":"def items ( self ) -> Iterator [ Tuple [ str , Any ]]","title":"items"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#keys_1","text":"def keys ( self ) -> List [ Any ] Keys of the pseudo dictionary, uses a list not set so order information can be maintained like python dictionaries.","title":"keys"},{"location":"api/stac_fastapi/sqlalchemy/models/decompose/#values_1","text":"def values ( self ) -> List [ Any ]","title":"values"},{"location":"api/stac_fastapi/sqlalchemy/models/links/","text":"Module stac_fastapi.sqlalchemy.models.links \u00b6 link helpers. None Variables \u00b6 INFERRED_LINK_RELS Functions \u00b6 filter_links \u00b6 def filter_links ( links : List [ Dict ] ) -> List [ Dict ] Remove inferred links. Classes \u00b6 BaseLinks \u00b6 class BaseLinks ( collection_id : str , base_url : str ) Descendants \u00b6 stac_fastapi.sqlalchemy.models.links.CollectionLinks stac_fastapi.sqlalchemy.models.links.ItemLinks Methods \u00b6 root \u00b6 def root ( self ) -> stac_pydantic . shared . Link Return the catalog root. CollectionLinks \u00b6 class CollectionLinks ( collection_id : str , base_url : str ) Ancestors (in MRO) \u00b6 stac_fastapi.sqlalchemy.models.links.BaseLinks Methods \u00b6 create_links \u00b6 def create_links ( self ) -> List [ stac_pydantic . shared . Link ] Return all inferred links. item \u00b6 def item ( self ) -> stac_pydantic . shared . Link Create the item link. parent \u00b6 def parent ( self ) -> stac_pydantic . shared . Link Create the parent link. root \u00b6 def root ( self ) -> stac_pydantic . shared . Link Return the catalog root. self \u00b6 def self ( self ) -> stac_pydantic . shared . Link Create the self link. ItemLinks \u00b6 class ItemLinks ( collection_id : str , base_url : str , item_id : str ) Ancestors (in MRO) \u00b6 stac_fastapi.sqlalchemy.models.links.BaseLinks Methods \u00b6 collection \u00b6 def collection ( self ) -> stac_pydantic . shared . Link Create the collection link. create_links \u00b6 def create_links ( self ) -> List [ stac_pydantic . shared . Link ] Return all inferred links. parent \u00b6 def parent ( self ) -> stac_pydantic . shared . Link Create the parent link. root \u00b6 def root ( self ) -> stac_pydantic . shared . Link Return the catalog root. self \u00b6 def self ( self ) -> stac_pydantic . shared . Link Create the self link. tiles \u00b6 def tiles ( self ) -> stac_pydantic . shared . Link Create the tiles link.","title":"links"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#module-stac_fastapisqlalchemymodelslinks","text":"link helpers. None","title":"Module stac_fastapi.sqlalchemy.models.links"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#variables","text":"INFERRED_LINK_RELS","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#functions","text":"","title":"Functions"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#filter_links","text":"def filter_links ( links : List [ Dict ] ) -> List [ Dict ] Remove inferred links.","title":"filter_links"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#baselinks","text":"class BaseLinks ( collection_id : str , base_url : str )","title":"BaseLinks"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#descendants","text":"stac_fastapi.sqlalchemy.models.links.CollectionLinks stac_fastapi.sqlalchemy.models.links.ItemLinks","title":"Descendants"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#root","text":"def root ( self ) -> stac_pydantic . shared . Link Return the catalog root.","title":"root"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#collectionlinks","text":"class CollectionLinks ( collection_id : str , base_url : str )","title":"CollectionLinks"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#ancestors-in-mro","text":"stac_fastapi.sqlalchemy.models.links.BaseLinks","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#create_links","text":"def create_links ( self ) -> List [ stac_pydantic . shared . Link ] Return all inferred links.","title":"create_links"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#item","text":"def item ( self ) -> stac_pydantic . shared . Link Create the item link.","title":"item"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#parent","text":"def parent ( self ) -> stac_pydantic . shared . Link Create the parent link.","title":"parent"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#root_1","text":"def root ( self ) -> stac_pydantic . shared . Link Return the catalog root.","title":"root"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#self","text":"def self ( self ) -> stac_pydantic . shared . Link Create the self link.","title":"self"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#itemlinks","text":"class ItemLinks ( collection_id : str , base_url : str , item_id : str )","title":"ItemLinks"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#ancestors-in-mro_1","text":"stac_fastapi.sqlalchemy.models.links.BaseLinks","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#collection","text":"def collection ( self ) -> stac_pydantic . shared . Link Create the collection link.","title":"collection"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#create_links_1","text":"def create_links ( self ) -> List [ stac_pydantic . shared . Link ] Return all inferred links.","title":"create_links"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#parent_1","text":"def parent ( self ) -> stac_pydantic . shared . Link Create the parent link.","title":"parent"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#root_2","text":"def root ( self ) -> stac_pydantic . shared . Link Return the catalog root.","title":"root"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#self_1","text":"def self ( self ) -> stac_pydantic . shared . Link Create the self link.","title":"self"},{"location":"api/stac_fastapi/sqlalchemy/models/links/#tiles","text":"def tiles ( self ) -> stac_pydantic . shared . Link Create the tiles link.","title":"tiles"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/","text":"Module stac_fastapi.sqlalchemy.models.schemas \u00b6 API pydantic models. None Variables \u00b6 DATETIME_RFC339 NumType Classes \u00b6 Collection \u00b6 class Collection ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 stac_pydantic.collection.Collection stac_pydantic.catalog.Catalog pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' validate_extensions \u00b6 def validate_extensions ( values ) Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() . to_dict \u00b6 def to_dict ( self , ** kwargs ) to_json \u00b6 def to_json ( self , ** kwargs ) Item \u00b6 class Item ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 stac_pydantic.item.Item geojson_pydantic.features.Feature pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' set_geometry \u00b6 def set_geometry ( v ) set geometry from geo interface or input update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() . to_dict \u00b6 def to_dict ( self , ** kwargs ) to_json \u00b6 def to_json ( self , ** kwargs ) Items \u00b6 class Items ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"schemas"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#module-stac_fastapisqlalchemymodelsschemas","text":"API pydantic models. None","title":"Module stac_fastapi.sqlalchemy.models.schemas"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#variables","text":"DATETIME_RFC339 NumType","title":"Variables"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#collection","text":"class Collection ( __pydantic_self__ , ** data : Any )","title":"Collection"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#ancestors-in-mro","text":"stac_pydantic.collection.Collection stac_pydantic.catalog.Catalog pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#class-variables","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#construct","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#validate_extensions","text":"def validate_extensions ( values )","title":"validate_extensions"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#to_dict","text":"def to_dict ( self , ** kwargs )","title":"to_dict"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#to_json","text":"def to_json ( self , ** kwargs )","title":"to_json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#item","text":"class Item ( __pydantic_self__ , ** data : Any )","title":"Item"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#ancestors-in-mro_1","text":"stac_pydantic.item.Item geojson_pydantic.features.Feature pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#class-variables_1","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#static-methods_1","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#construct_1","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#from_orm_1","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_file_1","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_obj_1","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_raw_1","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#schema_1","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#schema_json_1","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#set_geometry","text":"def set_geometry ( v ) set geometry from geo interface or input","title":"set_geometry"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#update_forward_refs_1","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#validate_1","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#copy_1","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#dict_1","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#json_1","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#to_dict_1","text":"def to_dict ( self , ** kwargs )","title":"to_dict"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#to_json_1","text":"def to_json ( self , ** kwargs )","title":"to_json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#items","text":"class Items ( __pydantic_self__ , ** data : Any )","title":"Items"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#ancestors-in-mro_2","text":"pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#class-variables_2","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#static-methods_2","text":"","title":"Static methods"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#construct_2","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#from_orm_2","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_file_2","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_obj_2","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#parse_raw_2","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#schema_2","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#schema_json_2","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#update_forward_refs_2","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#validate_2","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#copy_2","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#dict_2","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/sqlalchemy/models/schemas/#json_2","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/types/","text":"Module stac_fastapi.types \u00b6 backend submodule. None Sub-modules \u00b6 stac_fastapi.types.config stac_fastapi.types.core stac_fastapi.types.errors stac_fastapi.types.extension stac_fastapi.types.search stac_fastapi.types.version","title":"index"},{"location":"api/stac_fastapi/types/#module-stac_fastapitypes","text":"backend submodule. None","title":"Module stac_fastapi.types"},{"location":"api/stac_fastapi/types/#sub-modules","text":"stac_fastapi.types.config stac_fastapi.types.core stac_fastapi.types.errors stac_fastapi.types.extension stac_fastapi.types.search stac_fastapi.types.version","title":"Sub-modules"},{"location":"api/stac_fastapi/types/config/","text":"Module stac_fastapi.types.config \u00b6 stac_fastapi.types.config module. None Classes \u00b6 ApiSettings \u00b6 class ApiSettings ( __pydantic_self__ , _env_file : Union [ pathlib . Path , str , NoneType ] = '<object object at 0x7fe06e6a9360>' , _env_file_encoding : Union [ str , NoneType ] = None , _secrets_dir : Union [ pathlib . Path , str , NoneType ] = None , ** values : Any ) Attributes \u00b6 Name Type Description Default environment None name of the environment (ex. dev/prod). None debug None toggles debug mode. None forbidden_fields None set of fields defined by STAC but not included in the database. None indexed_fields None set of fields which are usually in item.properties but are indexed as distinct columns in the database. None Ancestors (in MRO) \u00b6 pydantic.env_settings.BaseSettings pydantic.main.BaseModel pydantic.utils.Representation Descendants \u00b6 stac_fastapi.sqlalchemy.config.SqlalchemySettings Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() . Settings \u00b6 class Settings ( / , * args , ** kwargs ) Static methods \u00b6 get \u00b6 def get ( ) -> stac_fastapi . types . config . ApiSettings Get the settings. If they have not yet been set, throws an exception. set \u00b6 def set ( base_settings : stac_fastapi . types . config . ApiSettings ) Set the global settings.","title":"config"},{"location":"api/stac_fastapi/types/config/#module-stac_fastapitypesconfig","text":"stac_fastapi.types.config module. None","title":"Module stac_fastapi.types.config"},{"location":"api/stac_fastapi/types/config/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/types/config/#apisettings","text":"class ApiSettings ( __pydantic_self__ , _env_file : Union [ pathlib . Path , str , NoneType ] = '<object object at 0x7fe06e6a9360>' , _env_file_encoding : Union [ str , NoneType ] = None , _secrets_dir : Union [ pathlib . Path , str , NoneType ] = None , ** values : Any )","title":"ApiSettings"},{"location":"api/stac_fastapi/types/config/#attributes","text":"Name Type Description Default environment None name of the environment (ex. dev/prod). None debug None toggles debug mode. None forbidden_fields None set of fields defined by STAC but not included in the database. None indexed_fields None set of fields which are usually in item.properties but are indexed as distinct columns in the database. None","title":"Attributes"},{"location":"api/stac_fastapi/types/config/#ancestors-in-mro","text":"pydantic.env_settings.BaseSettings pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/config/#descendants","text":"stac_fastapi.sqlalchemy.config.SqlalchemySettings","title":"Descendants"},{"location":"api/stac_fastapi/types/config/#class-variables","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/types/config/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/types/config/#construct","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/types/config/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/types/config/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/types/config/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/types/config/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/types/config/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/types/config/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/types/config/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/types/config/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/types/config/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/config/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/types/config/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/types/config/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/types/config/#settings","text":"class Settings ( / , * args , ** kwargs )","title":"Settings"},{"location":"api/stac_fastapi/types/config/#static-methods_1","text":"","title":"Static methods"},{"location":"api/stac_fastapi/types/config/#get","text":"def get ( ) -> stac_fastapi . types . config . ApiSettings Get the settings. If they have not yet been set, throws an exception.","title":"get"},{"location":"api/stac_fastapi/types/config/#set","text":"def set ( base_settings : stac_fastapi . types . config . ApiSettings ) Set the global settings.","title":"set"},{"location":"api/stac_fastapi/types/core/","text":"Module stac_fastapi.types.core \u00b6 Base clients. None Variables \u00b6 NumType Classes \u00b6 BaseCoreClient \u00b6 class BaseCoreClient ( extensions : List [ stac_fastapi . types . extension . ApiExtension ] = NOTHING ) Attributes \u00b6 Name Type Description Default extensions None list of registered api extensions. None Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.sqlalchemy.core.CoreCrudClient Methods \u00b6 all_collections \u00b6 def all_collections ( self ) -> List [ stac_pydantic . collection . Collection ] Get all available collections. Called with GET /collections . Returns: Type Description None A list of collections. conformance \u00b6 def conformance ( self , ** kwargs ) -> stac_pydantic . api . conformance . ConformanceClasses Conformance classes. Called with GET /conformance . Returns: Type Description None Conformance classes which the server conforms to. extension_is_enabled \u00b6 def extension_is_enabled ( self , extension : Type [ stac_fastapi . types . extension . ApiExtension ] ) -> bool Check if an api extension is enabled. get_collection \u00b6 def get_collection ( self , id : str , ** kwargs ) -> stac_pydantic . collection . Collection Get collection by id. Called with GET /collections/{collectionId} . Parameters: Name Type Description Default id None Id of the collection. None Returns: Type Description None Collection. get_item \u00b6 def get_item ( self , id : str , ** kwargs ) -> stac_pydantic . item . Item Get item by id. Called with GET /collections/{collectionId}/items/{itemId} . Parameters: Name Type Description Default id None Id of the item. None Returns: Type Description None Item. get_search \u00b6 def get_search ( self , collections : Union [ List [ str ], NoneType ] = None , ids : Union [ List [ str ], NoneType ] = None , bbox : Union [ List [ Union [ float , int ]], NoneType ] = None , datetime : Union [ str , datetime . datetime , NoneType ] = None , limit : Union [ int , NoneType ] = 10 , query : Union [ str , NoneType ] = None , token : Union [ str , NoneType ] = None , fields : Union [ List [ str ], NoneType ] = None , sortby : Union [ str , NoneType ] = None , ** kwargs ) -> Dict [ str , Any ] Cross catalog search (GET). Called with GET /search . Returns: Type Description None ItemCollection containing items which match the search criteria. item_collection \u00b6 def item_collection ( self , id : str , limit : int = 10 , token : str = None , ** kwargs ) -> stac_pydantic . item . ItemCollection Get all items from a specific collection. Called with GET /collections/{collectionId}/items Parameters: Name Type Description Default id None id of the collection. None limit None number of items to return. None token None pagination token. None Returns: Type Description None An ItemCollection. landing_page \u00b6 def landing_page ( self , ** kwargs ) -> stac_pydantic . api . landing . LandingPage Landing page. Called with GET / . Returns: Type Description None API landing page, serving as an entry point to the API. post_search \u00b6 def post_search ( self , search_request : stac_pydantic . api . search . Search , ** kwargs ) -> Dict [ str , Any ] Cross catalog search (POST). Called with POST /search . Parameters: Name Type Description Default search_request None search request parameters. None Returns: Type Description None ItemCollection containing items which match the search criteria. BaseTransactionsClient \u00b6 class BaseTransactionsClient ( ) Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.sqlalchemy.transactions.TransactionsClient Methods \u00b6 create_collection \u00b6 def create_collection ( self , model : stac_pydantic . collection . Collection , ** kwargs ) -> stac_pydantic . collection . Collection Create a new collection. Called with POST /collections . Parameters: Name Type Description Default model None the collection None Returns: Type Description None The collection that was created. create_item \u00b6 def create_item ( self , model : stac_pydantic . item . Item , ** kwargs ) -> stac_pydantic . item . Item Create a new item. Called with POST /collections/{collectionId}/items . Parameters: Name Type Description Default model None the item None Returns: Type Description None The item that was created. delete_collection \u00b6 def delete_collection ( self , id : str , ** kwargs ) -> stac_pydantic . collection . Collection Delete a collection. Called with DELETE /collections/{collectionId} Parameters: Name Type Description Default id None id of the collection. None Returns: Type Description None The deleted collection. delete_item \u00b6 def delete_item ( self , id : str , ** kwargs ) -> stac_pydantic . item . Item Delete an item from a collection. Called with DELETE /collections/{collectionId}/items/{itemId} Parameters: Name Type Description Default id None id of the item. None Returns: Type Description None The deleted item. update_collection \u00b6 def update_collection ( self , model : stac_pydantic . collection . Collection , ** kwargs ) -> stac_pydantic . collection . Collection Perform a complete update on an existing collection. Called with PUT /collections . It is expected that this item already exists. The update should do a diff against the saved collection and perform any necessary updates. Partial updates are not supported by the transactions extension. Parameters: Name Type Description Default model None the collection (must be complete) None Returns: Type Description None The updated collection. update_item \u00b6 def update_item ( self , model : stac_pydantic . item . Item , ** kwargs ) -> stac_pydantic . item . Item Perform a complete update on an existing item. Called with PUT /collections/{collectionId}/items . It is expected that this item already exists. The update should do a diff against the saved item and perform any necessary updates. Partial updates are not supported by the transactions extension. Parameters: Name Type Description Default model None the item (must be complete) None Returns: Type Description None The updated item.","title":"core"},{"location":"api/stac_fastapi/types/core/#module-stac_fastapitypescore","text":"Base clients. None","title":"Module stac_fastapi.types.core"},{"location":"api/stac_fastapi/types/core/#variables","text":"NumType","title":"Variables"},{"location":"api/stac_fastapi/types/core/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/types/core/#basecoreclient","text":"class BaseCoreClient ( extensions : List [ stac_fastapi . types . extension . ApiExtension ] = NOTHING )","title":"BaseCoreClient"},{"location":"api/stac_fastapi/types/core/#attributes","text":"Name Type Description Default extensions None list of registered api extensions. None","title":"Attributes"},{"location":"api/stac_fastapi/types/core/#ancestors-in-mro","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/core/#descendants","text":"stac_fastapi.sqlalchemy.core.CoreCrudClient","title":"Descendants"},{"location":"api/stac_fastapi/types/core/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/core/#all_collections","text":"def all_collections ( self ) -> List [ stac_pydantic . collection . Collection ] Get all available collections. Called with GET /collections . Returns: Type Description None A list of collections.","title":"all_collections"},{"location":"api/stac_fastapi/types/core/#conformance","text":"def conformance ( self , ** kwargs ) -> stac_pydantic . api . conformance . ConformanceClasses Conformance classes. Called with GET /conformance . Returns: Type Description None Conformance classes which the server conforms to.","title":"conformance"},{"location":"api/stac_fastapi/types/core/#extension_is_enabled","text":"def extension_is_enabled ( self , extension : Type [ stac_fastapi . types . extension . ApiExtension ] ) -> bool Check if an api extension is enabled.","title":"extension_is_enabled"},{"location":"api/stac_fastapi/types/core/#get_collection","text":"def get_collection ( self , id : str , ** kwargs ) -> stac_pydantic . collection . Collection Get collection by id. Called with GET /collections/{collectionId} . Parameters: Name Type Description Default id None Id of the collection. None Returns: Type Description None Collection.","title":"get_collection"},{"location":"api/stac_fastapi/types/core/#get_item","text":"def get_item ( self , id : str , ** kwargs ) -> stac_pydantic . item . Item Get item by id. Called with GET /collections/{collectionId}/items/{itemId} . Parameters: Name Type Description Default id None Id of the item. None Returns: Type Description None Item.","title":"get_item"},{"location":"api/stac_fastapi/types/core/#get_search","text":"def get_search ( self , collections : Union [ List [ str ], NoneType ] = None , ids : Union [ List [ str ], NoneType ] = None , bbox : Union [ List [ Union [ float , int ]], NoneType ] = None , datetime : Union [ str , datetime . datetime , NoneType ] = None , limit : Union [ int , NoneType ] = 10 , query : Union [ str , NoneType ] = None , token : Union [ str , NoneType ] = None , fields : Union [ List [ str ], NoneType ] = None , sortby : Union [ str , NoneType ] = None , ** kwargs ) -> Dict [ str , Any ] Cross catalog search (GET). Called with GET /search . Returns: Type Description None ItemCollection containing items which match the search criteria.","title":"get_search"},{"location":"api/stac_fastapi/types/core/#item_collection","text":"def item_collection ( self , id : str , limit : int = 10 , token : str = None , ** kwargs ) -> stac_pydantic . item . ItemCollection Get all items from a specific collection. Called with GET /collections/{collectionId}/items Parameters: Name Type Description Default id None id of the collection. None limit None number of items to return. None token None pagination token. None Returns: Type Description None An ItemCollection.","title":"item_collection"},{"location":"api/stac_fastapi/types/core/#landing_page","text":"def landing_page ( self , ** kwargs ) -> stac_pydantic . api . landing . LandingPage Landing page. Called with GET / . Returns: Type Description None API landing page, serving as an entry point to the API.","title":"landing_page"},{"location":"api/stac_fastapi/types/core/#post_search","text":"def post_search ( self , search_request : stac_pydantic . api . search . Search , ** kwargs ) -> Dict [ str , Any ] Cross catalog search (POST). Called with POST /search . Parameters: Name Type Description Default search_request None search request parameters. None Returns: Type Description None ItemCollection containing items which match the search criteria.","title":"post_search"},{"location":"api/stac_fastapi/types/core/#basetransactionsclient","text":"class BaseTransactionsClient ( )","title":"BaseTransactionsClient"},{"location":"api/stac_fastapi/types/core/#ancestors-in-mro_1","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/core/#descendants_1","text":"stac_fastapi.sqlalchemy.transactions.TransactionsClient","title":"Descendants"},{"location":"api/stac_fastapi/types/core/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/core/#create_collection","text":"def create_collection ( self , model : stac_pydantic . collection . Collection , ** kwargs ) -> stac_pydantic . collection . Collection Create a new collection. Called with POST /collections . Parameters: Name Type Description Default model None the collection None Returns: Type Description None The collection that was created.","title":"create_collection"},{"location":"api/stac_fastapi/types/core/#create_item","text":"def create_item ( self , model : stac_pydantic . item . Item , ** kwargs ) -> stac_pydantic . item . Item Create a new item. Called with POST /collections/{collectionId}/items . Parameters: Name Type Description Default model None the item None Returns: Type Description None The item that was created.","title":"create_item"},{"location":"api/stac_fastapi/types/core/#delete_collection","text":"def delete_collection ( self , id : str , ** kwargs ) -> stac_pydantic . collection . Collection Delete a collection. Called with DELETE /collections/{collectionId} Parameters: Name Type Description Default id None id of the collection. None Returns: Type Description None The deleted collection.","title":"delete_collection"},{"location":"api/stac_fastapi/types/core/#delete_item","text":"def delete_item ( self , id : str , ** kwargs ) -> stac_pydantic . item . Item Delete an item from a collection. Called with DELETE /collections/{collectionId}/items/{itemId} Parameters: Name Type Description Default id None id of the item. None Returns: Type Description None The deleted item.","title":"delete_item"},{"location":"api/stac_fastapi/types/core/#update_collection","text":"def update_collection ( self , model : stac_pydantic . collection . Collection , ** kwargs ) -> stac_pydantic . collection . Collection Perform a complete update on an existing collection. Called with PUT /collections . It is expected that this item already exists. The update should do a diff against the saved collection and perform any necessary updates. Partial updates are not supported by the transactions extension. Parameters: Name Type Description Default model None the collection (must be complete) None Returns: Type Description None The updated collection.","title":"update_collection"},{"location":"api/stac_fastapi/types/core/#update_item","text":"def update_item ( self , model : stac_pydantic . item . Item , ** kwargs ) -> stac_pydantic . item . Item Perform a complete update on an existing item. Called with PUT /collections/{collectionId}/items . It is expected that this item already exists. The update should do a diff against the saved item and perform any necessary updates. Partial updates are not supported by the transactions extension. Parameters: Name Type Description Default model None the item (must be complete) None Returns: Type Description None The updated item.","title":"update_item"},{"location":"api/stac_fastapi/types/errors/","text":"Module stac_fastapi.types.errors \u00b6 stac_fastapi.types.errors module. None Classes \u00b6 ConflictError \u00b6 class ConflictError ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException Class variables \u00b6 args Methods \u00b6 with_traceback \u00b6 def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self. DatabaseError \u00b6 class DatabaseError ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException Class variables \u00b6 args Methods \u00b6 with_traceback \u00b6 def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self. ForeignKeyError \u00b6 class ForeignKeyError ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException Class variables \u00b6 args Methods \u00b6 with_traceback \u00b6 def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self. NotFoundError \u00b6 class NotFoundError ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException Class variables \u00b6 args Methods \u00b6 with_traceback \u00b6 def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self. StacApiError \u00b6 class StacApiError ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 builtins.Exception builtins.BaseException Descendants \u00b6 stac_fastapi.types.errors.ConflictError stac_fastapi.types.errors.NotFoundError stac_fastapi.types.errors.ForeignKeyError stac_fastapi.types.errors.DatabaseError Class variables \u00b6 args Methods \u00b6 with_traceback \u00b6 def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self.","title":"errors"},{"location":"api/stac_fastapi/types/errors/#module-stac_fastapitypeserrors","text":"stac_fastapi.types.errors module. None","title":"Module stac_fastapi.types.errors"},{"location":"api/stac_fastapi/types/errors/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/types/errors/#conflicterror","text":"class ConflictError ( / , * args , ** kwargs )","title":"ConflictError"},{"location":"api/stac_fastapi/types/errors/#ancestors-in-mro","text":"stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/errors/#class-variables","text":"args","title":"Class variables"},{"location":"api/stac_fastapi/types/errors/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/errors/#with_traceback","text":"def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self.","title":"with_traceback"},{"location":"api/stac_fastapi/types/errors/#databaseerror","text":"class DatabaseError ( / , * args , ** kwargs )","title":"DatabaseError"},{"location":"api/stac_fastapi/types/errors/#ancestors-in-mro_1","text":"stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/errors/#class-variables_1","text":"args","title":"Class variables"},{"location":"api/stac_fastapi/types/errors/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/errors/#with_traceback_1","text":"def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self.","title":"with_traceback"},{"location":"api/stac_fastapi/types/errors/#foreignkeyerror","text":"class ForeignKeyError ( / , * args , ** kwargs )","title":"ForeignKeyError"},{"location":"api/stac_fastapi/types/errors/#ancestors-in-mro_2","text":"stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/errors/#class-variables_2","text":"args","title":"Class variables"},{"location":"api/stac_fastapi/types/errors/#methods_2","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/errors/#with_traceback_2","text":"def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self.","title":"with_traceback"},{"location":"api/stac_fastapi/types/errors/#notfounderror","text":"class NotFoundError ( / , * args , ** kwargs )","title":"NotFoundError"},{"location":"api/stac_fastapi/types/errors/#ancestors-in-mro_3","text":"stac_fastapi.types.errors.StacApiError builtins.Exception builtins.BaseException","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/errors/#class-variables_3","text":"args","title":"Class variables"},{"location":"api/stac_fastapi/types/errors/#methods_3","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/errors/#with_traceback_3","text":"def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self.","title":"with_traceback"},{"location":"api/stac_fastapi/types/errors/#stacapierror","text":"class StacApiError ( / , * args , ** kwargs )","title":"StacApiError"},{"location":"api/stac_fastapi/types/errors/#ancestors-in-mro_4","text":"builtins.Exception builtins.BaseException","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/errors/#descendants","text":"stac_fastapi.types.errors.ConflictError stac_fastapi.types.errors.NotFoundError stac_fastapi.types.errors.ForeignKeyError stac_fastapi.types.errors.DatabaseError","title":"Descendants"},{"location":"api/stac_fastapi/types/errors/#class-variables_4","text":"args","title":"Class variables"},{"location":"api/stac_fastapi/types/errors/#methods_4","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/errors/#with_traceback_4","text":"def with_traceback ( ... ) Exception.with_traceback(tb) -- set self. traceback to tb and return self.","title":"with_traceback"},{"location":"api/stac_fastapi/types/extension/","text":"Module stac_fastapi.types.extension \u00b6 base api extension. None Classes \u00b6 ApiExtension \u00b6 class ApiExtension ( ) Ancestors (in MRO) \u00b6 abc.ABC Descendants \u00b6 stac_fastapi.extensions.third_party.bulk_transactions.BulkTransactionExtension stac_fastapi.extensions.third_party.tiles.TilesExtension stac_fastapi.extensions.core.context.ContextExtension stac_fastapi.extensions.core.fields.FieldsExtension stac_fastapi.extensions.core.query.QueryExtension stac_fastapi.extensions.core.sort.SortExtension stac_fastapi.extensions.core.transaction.TransactionExtension Methods \u00b6 register \u00b6 def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"extension"},{"location":"api/stac_fastapi/types/extension/#module-stac_fastapitypesextension","text":"base api extension. None","title":"Module stac_fastapi.types.extension"},{"location":"api/stac_fastapi/types/extension/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/types/extension/#apiextension","text":"class ApiExtension ( )","title":"ApiExtension"},{"location":"api/stac_fastapi/types/extension/#ancestors-in-mro","text":"abc.ABC","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/extension/#descendants","text":"stac_fastapi.extensions.third_party.bulk_transactions.BulkTransactionExtension stac_fastapi.extensions.third_party.tiles.TilesExtension stac_fastapi.extensions.core.context.ContextExtension stac_fastapi.extensions.core.fields.FieldsExtension stac_fastapi.extensions.core.query.QueryExtension stac_fastapi.extensions.core.sort.SortExtension stac_fastapi.extensions.core.transaction.TransactionExtension","title":"Descendants"},{"location":"api/stac_fastapi/types/extension/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/extension/#register","text":"def register ( self , app : fastapi . applications . FastAPI ) -> None Register the extension with a FastAPI application. Parameters: Name Type Description Default app None target FastAPI application. None Returns: Type Description None None","title":"register"},{"location":"api/stac_fastapi/types/search/","text":"Module stac_fastapi.types.search \u00b6 stac_fastapi.types.search module. TODO: replace with stac-pydantic \u00b6 Variables \u00b6 NumType Classes \u00b6 FieldsExtension \u00b6 class FieldsExtension ( __pydantic_self__ , ** data : Any ) Attributes \u00b6 Name Type Description Default include None set of fields to include. None exclude None set of fields to exclude. None Ancestors (in MRO) \u00b6 stac_pydantic.api.extensions.fields.FieldsExtension pydantic.main.BaseModel pydantic.utils.Representation Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' Instance variables \u00b6 filter_fields Create pydantic include/exclude expression. Create dictionary of fields to include/exclude on model export based on the included and excluded fields passed to the API Ref: pydantic-docs.helpmanual.io/usage/exporting_models/#advanced-include-and-exclude Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() . Operator \u00b6 class Operator ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 builtins.str stac_pydantic.utils.AutoValueEnum enum.Enum Class variables \u00b6 eq ge gt le lt ne QueryableTypes \u00b6 class QueryableTypes ( ) Class variables \u00b6 dtype epsg gsd height maxzoom minzoom orientation width Queryables \u00b6 class Queryables ( / , * args , ** kwargs ) Ancestors (in MRO) \u00b6 builtins.str stac_pydantic.utils.AutoValueEnum enum.Enum Class variables \u00b6 dtype epsg foo gsd height maxzoom minzoom orientation width STACSearch \u00b6 class STACSearch ( __pydantic_self__ , ** data : Any ) Ancestors (in MRO) \u00b6 stac_pydantic.api.search.Search pydantic.main.BaseModel pydantic.utils.Representation Descendants \u00b6 pydantic.main.STACSearch Class variables \u00b6 Config Static methods \u00b6 construct \u00b6 def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm \u00b6 def from_orm ( obj : Any ) -> 'Model' parse_file \u00b6 def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj \u00b6 def parse_obj ( obj : Any ) -> 'Model' parse_raw \u00b6 def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema \u00b6 def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json \u00b6 def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs \u00b6 def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate \u00b6 def validate ( value : Any ) -> 'Model' validate_datetime \u00b6 def validate_datetime ( v ) validate_query_fields \u00b6 def validate_query_fields ( values : Dict ) -> Dict Validate query fields. validate_spatial \u00b6 def validate_spatial ( v , values ) Methods \u00b6 copy \u00b6 def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict \u00b6 def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json \u00b6 def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"search"},{"location":"api/stac_fastapi/types/search/#module-stac_fastapitypessearch","text":"stac_fastapi.types.search module.","title":"Module stac_fastapi.types.search"},{"location":"api/stac_fastapi/types/search/#todo-replace-with-stac-pydantic","text":"","title":"TODO: replace with stac-pydantic"},{"location":"api/stac_fastapi/types/search/#variables","text":"NumType","title":"Variables"},{"location":"api/stac_fastapi/types/search/#classes","text":"","title":"Classes"},{"location":"api/stac_fastapi/types/search/#fieldsextension","text":"class FieldsExtension ( __pydantic_self__ , ** data : Any )","title":"FieldsExtension"},{"location":"api/stac_fastapi/types/search/#attributes","text":"Name Type Description Default include None set of fields to include. None exclude None set of fields to exclude. None","title":"Attributes"},{"location":"api/stac_fastapi/types/search/#ancestors-in-mro","text":"stac_pydantic.api.extensions.fields.FieldsExtension pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/search/#class-variables","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/types/search/#static-methods","text":"","title":"Static methods"},{"location":"api/stac_fastapi/types/search/#construct","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/types/search/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/types/search/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/types/search/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/types/search/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/types/search/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/types/search/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/types/search/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/types/search/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/types/search/#instance-variables","text":"filter_fields Create pydantic include/exclude expression. Create dictionary of fields to include/exclude on model export based on the included and excluded fields passed to the API Ref: pydantic-docs.helpmanual.io/usage/exporting_models/#advanced-include-and-exclude","title":"Instance variables"},{"location":"api/stac_fastapi/types/search/#methods","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/search/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/types/search/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/types/search/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/types/search/#operator","text":"class Operator ( / , * args , ** kwargs )","title":"Operator"},{"location":"api/stac_fastapi/types/search/#ancestors-in-mro_1","text":"builtins.str stac_pydantic.utils.AutoValueEnum enum.Enum","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/search/#class-variables_1","text":"eq ge gt le lt ne","title":"Class variables"},{"location":"api/stac_fastapi/types/search/#queryabletypes","text":"class QueryableTypes ( )","title":"QueryableTypes"},{"location":"api/stac_fastapi/types/search/#class-variables_2","text":"dtype epsg gsd height maxzoom minzoom orientation width","title":"Class variables"},{"location":"api/stac_fastapi/types/search/#queryables","text":"class Queryables ( / , * args , ** kwargs )","title":"Queryables"},{"location":"api/stac_fastapi/types/search/#ancestors-in-mro_2","text":"builtins.str stac_pydantic.utils.AutoValueEnum enum.Enum","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/search/#class-variables_3","text":"dtype epsg foo gsd height maxzoom minzoom orientation width","title":"Class variables"},{"location":"api/stac_fastapi/types/search/#stacsearch","text":"class STACSearch ( __pydantic_self__ , ** data : Any )","title":"STACSearch"},{"location":"api/stac_fastapi/types/search/#ancestors-in-mro_3","text":"stac_pydantic.api.search.Search pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"api/stac_fastapi/types/search/#descendants","text":"pydantic.main.STACSearch","title":"Descendants"},{"location":"api/stac_fastapi/types/search/#class-variables_4","text":"Config","title":"Class variables"},{"location":"api/stac_fastapi/types/search/#static-methods_1","text":"","title":"Static methods"},{"location":"api/stac_fastapi/types/search/#construct_1","text":"def construct ( _fields_set : Union [ ForwardRef ( 'SetStr' ), NoneType ] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"api/stac_fastapi/types/search/#from_orm_1","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"api/stac_fastapi/types/search/#parse_file_1","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"api/stac_fastapi/types/search/#parse_obj_1","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"api/stac_fastapi/types/search/#parse_raw_1","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"api/stac_fastapi/types/search/#schema_1","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"api/stac_fastapi/types/search/#schema_json_1","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"api/stac_fastapi/types/search/#update_forward_refs_1","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"api/stac_fastapi/types/search/#validate_1","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"api/stac_fastapi/types/search/#validate_datetime","text":"def validate_datetime ( v )","title":"validate_datetime"},{"location":"api/stac_fastapi/types/search/#validate_query_fields","text":"def validate_query_fields ( values : Dict ) -> Dict Validate query fields.","title":"validate_query_fields"},{"location":"api/stac_fastapi/types/search/#validate_spatial","text":"def validate_spatial ( v , values )","title":"validate_spatial"},{"location":"api/stac_fastapi/types/search/#methods_1","text":"","title":"Methods"},{"location":"api/stac_fastapi/types/search/#copy_1","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"api/stac_fastapi/types/search/#dict_1","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"api/stac_fastapi/types/search/#json_1","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Union [ Callable [[ Any ], Any ], NoneType ] = None , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"api/stac_fastapi/types/version/","text":"Module stac_fastapi.types.version \u00b6 library version. None","title":"version"},{"location":"api/stac_fastapi/types/version/#module-stac_fastapitypesversion","text":"library version. None","title":"Module stac_fastapi.types.version"}]}